{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/blog/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"excerpt":"…","fields":{"slug":"/blog/2024/java-best-practices-by-jetbrains/"},"frontmatter":{"date":"01 March, 2024","title":"JetBrains가 제안하는 자바 모범 사례","description":"[번역] Java Best Practices","tags":["java","best-practices","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%9D%BC%EB%B0%98-%EC%9B%90%EC%B9%99\">일반 원칙</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%AA%85%ED%99%95%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1%ED%95%A0-%EA%B2%83-%EC%A7%80%EB%82%98%EC%B9%98%EA%B2%8C-%EC%98%81%EB%A6%AC%ED%95%98%EA%B2%8C-%EC%93%B0%EC%A7%80-%EB%A7%90-%EA%B2%83\">명확하게 작성할 것, 지나치게 영리하게 쓰지 말 것</a></p>\n<ul>\n<li><a href=\"#%EC%98%81%EB%A6%AC%ED%95%98%EC%A7%80%EB%A7%8C-%EB%82%9C%ED%95%B4\">영리하지만 난해</a></li>\n<li><a href=\"#%EB%AA%85%ED%99%95%ED%95%9C\">명확한</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A7%A7%EA%B3%A0-%EA%B0%84%EA%B2%B0%ED%95%98%EA%B2%8C-%EC%9C%A0%EC%A7%80%ED%95%A0-%EA%B2%83\">짧고 간결하게 유지할 것</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9D%B4%EB%A6%84%EC%9D%80-%EC%96%B4%EB%A0%B5%EC%A7%80%EB%A7%8C-%EC%8B%A0%EC%A4%91%ED%95%98%EA%B3%A0-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%A7%93%EA%B8%B0\">이름은 어렵지만 신중하고 직관적으로 짓기</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%85%8C%EC%8A%A4%ED%8A%B8\">테스트, 테스트, 테스트</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%96%B8%EC%96%B4-%ED%8A%B9%ED%99%94%EB%90%9C-%ED%8C%81\">언어 특화된 팁</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%B3%B5%EC%9E%A1%ED%95%98%EA%B3%A0-%EA%B8%B4-if%EB%AC%B8-%EB%8C%80%EC%8B%A0-switch-%ED%91%9C%ED%98%84%EC%8B%9D-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">복잡하고 긴 if문 대신 switch 표현식 사용하기</a></p>\n<ul>\n<li><a href=\"#%EB%84%88%EB%AC%B4-%EB%A7%8E%EC%9D%80-else-if%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EA%B2%BD%EC%9A%B0\">너무 많은 else-if를 사용한 경우</a></li>\n<li><a href=\"#switch%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EA%B2%BD%EC%9A%B0\">switch를 사용한 경우</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%B9%88-catch-%EB%B8%94%EB%A1%9D%EC%9D%84-%ED%94%BC%ED%95%98%EA%B8%B0\">빈 catch 블록을 피하기</a></p>\n<ul>\n<li><a href=\"#%EB%B9%88-catch-%EB%B8%94%EB%A1%9D\">빈 catch 블록</a></li>\n<li><a href=\"#%EC%98%88%EC%99%B8%EB%A5%BC-%EB%A1%9C%EA%B7%B8%EB%A1%9C-%EA%B8%B0%EB%A1%9D\">예외를 로그로 기록</a></li>\n<li><a href=\"#%EC%98%88%EC%99%B8%EB%A5%BC-%EA%B8%B0%EB%A1%9D%ED%95%9C-%ED%9B%84-%EB%8B%A4%EC%8B%9C-%EB%8D%98%EC%A7%80%EA%B8%B0\">예외를 기록한 후 다시 던지기</a></li>\n<li><a href=\"#%EC%98%88%EC%99%B8%EB%A5%BC-%EA%B8%B0%EB%A1%9D%ED%95%98%EA%B3%A0-%EB%8C%80%EC%B2%B4%EA%B0%92%EC%9D%84-%EB%B0%98%ED%99%98%ED%95%98%EA%B8%B0\">예외를 기록하고 대체값을 반환하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%B0%B0%EC%97%B4array%EB%B3%B4%EB%8B%A4%EB%8A%94-%EC%BB%AC%EB%A0%89%EC%85%98collection%EC%9D%84-%EC%82%AC%EC%9A%A9\">배열(Array)보다는 컬렉션(Collection)을 사용</a></p>\n<ul>\n<li><a href=\"#%EB%B0%B0%EC%97%B4\">배열</a></li>\n<li><a href=\"#%EC%BB%AC%EB%A0%89%EC%85%98\">컬렉션</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%B6%88%EB%B3%80%EC%84%B1%EC%9D%98-%ED%99%9C%EC%9A%A9\">불변성의 활용</a></p>\n<ul>\n<li><a href=\"#final%EC%9D%B4-%EC%97%86%EC%9D%84-%EA%B2%BD%EC%9A%B0\">final이 없을 경우</a></li>\n<li><a href=\"#final%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\">final을 사용하는 경우</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%83%81%EC%86%8D%EB%B3%B4%EB%8B%A4%EB%8A%94-%EA%B5%AC%EC%84%B1%EC%9D%84-%EC%84%A0%ED%98%B8\">상속보다는 구성을 선호</a></p>\n<ul>\n<li><a href=\"#%EC%83%81%EC%86%8D\">상속</a></li>\n<li><a href=\"#%EA%B5%AC%EC%84%B1\">구성</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%9E%8C%EB%8B%A4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4-%ED%95%A8%EC%88%98%ED%98%95-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%A5%BC-%EA%B0%84%EA%B2%B0%ED%95%98%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0\">람다를 사용해 함수형 인터페이스를 간결하게 만들기</a></p>\n<ul>\n<li><a href=\"#%EB%9E%8C%EB%8B%A4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EC%9D%8C\">람다를 사용하지 않음</a></li>\n<li><a href=\"#%EB%9E%8C%EB%8B%A4%EB%A5%BC-%EC%82%AC%EC%9A%A9\">람다를 사용</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#enhanced-for-%EB%A3%A8%ED%94%84-%EB%98%90%EB%8A%94-%EC%8A%A4%ED%8A%B8%EB%A6%BC%EC%9D%84-%EC%82%AC%EC%9A%A9\">Enhanced for 루프 또는 스트림을 사용</a></p>\n<ul>\n<li><a href=\"#%EA%B3%A0%EC%A0%84%EC%A0%81-for-%EB%A3%A8%ED%94%84\">고전적 for 루프</a></li>\n<li><a href=\"#enhanced-for-%EB%A3%A8%ED%94%84\">Enhanced for 루프</a></li>\n<li><a href=\"#%EC%8A%A4%ED%8A%B8%EB%A6%BC\">스트림</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#try-with-resources-%EB%AC%B8%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4-%EB%A6%AC%EC%86%8C%EC%8A%A4-%EB%B3%B4%ED%98%B8%ED%95%98%EA%B8%B0\">try-with-resources 문을 사용해 리소스 보호하기</a></p>\n<ul>\n<li><a href=\"#%EB%A6%AC%EC%86%8C%EC%8A%A4%EB%A5%BC-%EC%88%98%EB%8F%99%EC%9C%BC%EB%A1%9C-%EB%8B%AB%EB%8A%94-%EA%B2%BD%EC%9A%B0\">리소스를 수동으로 닫는 경우</a></li>\n<li><a href=\"#try-with-resources-%EB%AC%B8%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\">try-with-resources 문을 사용하는 경우</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A7%80%EB%82%98%EC%B9%98%EA%B2%8C-%EC%A4%91%EC%B2%A9%EB%90%9C-%EC%BD%94%EB%93%9C-%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0\">지나치게 중첩된 코드 정리하기</a></p>\n<ul>\n<li><a href=\"#%EC%A7%80%EB%82%98%EC%B9%98%EA%B2%8C-%EB%A7%8E%EC%9D%80-%EC%A1%B0%EA%B1%B4%EB%AC%B8\">지나치게 많은 조건문</a></li>\n<li><a href=\"#%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81-%EB%90%9C-%EC%BD%94%EB%93%9C\">리팩토링 된 코드</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84\">프로젝트별</a></p>\n<ul>\n<li><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1%EC%9D%84-%EC%B5%9C%EC%8B%A0-%EC%83%81%ED%83%9C%EB%A1%9C-%EC%9C%A0%EC%A7%80%ED%95%98%EA%B8%B0\">의존성을 최신 상태로 유지하기</a></li>\n<li><a href=\"#%EC%B7%A8%EC%95%BD%ED%95%9C-%EC%9D%98%EC%A1%B4%EC%84%B1%EA%B3%BC-api-%EC%B0%BE%EA%B8%B0\">취약한 의존성과 API 찾기</a></li>\n<li><a href=\"#%EC%88%9C%ED%99%98-%EC%9D%98%EC%A1%B4%EC%84%B1-%ED%94%BC%ED%95%98%EA%B8%B0\">순환 의존성 피하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"이 포스트는 소프트웨어 아키텍처에 관한 시리즈인 소프트웨어 아키텍처 연대기(The Software Architecture Chronicles…","fields":{"slug":"/blog/2022/ddd-hexagonal-onion-clean-cqrs/"},"frontmatter":{"date":"30 September, 2022","title":"DDD, Hexagonal, Onion, Clean, CQRS, ... 모두 종합한 방법","description":"[번역] DDD, Hexagonal, Onion, Clean, CQRS, ... How I put it all together","tags":["ddd","hexagonal","onion","cqrs","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%EA%B8%B0%EC%B4%88-%EB%B8%94%EB%A1%9D\">시스템의 기초 블록</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8F%84%EA%B5%AC\">도구</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8F%84%EA%B5%AC-%EB%B0%8F-%EC%A0%84%EB%8B%AC-%EB%A9%94%EC%BB%A4%EB%8B%88%EC%A6%98%EC%9D%84-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BD%94%EC%96%B4%EC%99%80-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0\">도구 및 전달 메커니즘을 애플리케이션 코어와 연결하기</a></p>\n<ul>\n<li><a href=\"#%ED%8F%AC%ED%8A%B8ports\">포트(Ports)</a></li>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%96%B4%EB%8C%91%ED%84%B0primary-%EB%98%90%EB%8A%94-driving-adapters\">기본 어댑터(Primary 또는 Driving Adapters)</a></li>\n<li><a href=\"#%EB%B3%B4%EC%A1%B0-%EC%96%B4%EB%8C%91%ED%84%B0secondary-%EB%98%90%EB%8A%94-driven-adapters\">보조 어댑터(Secondary 또는 Driven Adapters)</a></li>\n<li><a href=\"#%EC%A0%9C%EC%96%B4%EC%9D%98-%EC%97%AD%EC%A0%84inversion-of-control\">제어의 역전(Inversion of Control)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BD%94%EC%96%B4%EC%9D%98-%EC%A1%B0%EC%A7%81%ED%99%94application-core-organisation\">애플리케이션 코어의 조직화(Application Core Organisation)</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EA%B3%84%EC%B8%B5application-layer\">애플리케이션 계층(Application Layer)</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8F%84%EB%A9%94%EC%9D%B8-%EA%B3%84%EC%B8%B5domain-layer\">도메인 계층(Domain Layer)</a></p>\n<ul>\n<li><a href=\"#%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%84%9C%EB%B9%84%EC%8A%A4domain-services\">도메인 서비스(Domain Services)</a></li>\n<li><a href=\"#%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%AA%A8%EB%8D%B8domain-model\">도메인 모델(Domain Model)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8components\">컴포넌트(Components)</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B0%84%EC%9D%98-%EA%B2%B0%ED%95%A9%EB%8F%84-%EB%82%AE%EC%B6%94%EA%B8%B0decoupling-the-components\">컴포넌트 간의 결합도 낮추기(Decoupling the components)</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%9D%98-%EB%A1%9C%EC%A7%81%EC%9D%84-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0triggering-logic-in-other-components\">다른 컴포넌트의 로직을 실행하기(Triggering logic in other components)</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%96%BB%EA%B8%B0getting-data-from-other-components\">다른 컴포넌트의 데이터 얻기(Getting data from other components)</a></p>\n<ul>\n<li><a href=\"#%EA%B3%B5%EC%9C%A0%EB%90%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%80%EC%9E%A5%EC%86%8Cdata-storage-shared-between-components\">공유된 데이터 저장소(Data storage shared between components)</a></li>\n<li><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%B3%84%EB%A1%9C-%EB%B6%84%EB%A6%AC%EB%90%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%80%EC%9E%A5%EC%86%8Cdata-storage-segregated-per-component\">컴포넌트별로 분리된 데이터 저장소(Data storage segregated per component)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A0%9C%EC%96%B4-%ED%9D%90%EB%A6%84flow-of-control\">제어 흐름(Flow of control)</a></p>\n<ul>\n<li><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C%EC%BF%BC%EB%A6%AC-%EB%B2%84%EC%8A%A4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EC%9D%84-%EB%95%8Cwithout-a-commandquery-bus\">커맨드/쿼리 버스를 사용하지 않을 때(Without a Command/Query Bus)</a></li>\n<li><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C%EC%BF%BC%EB%A6%AC-%EB%B2%84%EC%8A%A4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%A0-%EB%95%8Cwith-a-commandquery-bus\">커맨드/쿼리 버스를 사용할 때(With a Command/Query Bus)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0conclusion\">결론(Conclusion)</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"자랑은 아니지만 여러 회사를 돌아다녀 보니, 도메인 모델과 퍼시스턴스 모델이 같다고 생각하는 개발자들이 의외로 제법 있다. 추정컨대 데이터베이스 중심으로 사고를 하다 보니 그렇게 오해하는 게 아닌가 싶다. 정론을 얘기하자면, DDD…","fields":{"slug":"/blog/2022/domain-persistence/"},"frontmatter":{"date":"24 July, 2022","title":"도메인 모델과 퍼시스턴스 모델 분리","description":"Domain Model과 Persistence Model 결합과 분리","tags":["domain","persistence","ddd","clean-architecture"]},"tableOfContents":""}},{"node":{"excerpt":"📖 The Nature of Software Development 제목만 봐선 다분히 개발 이야기가 주를 이룰 것 같지만 사실 이 책은 애자일에 관한 책이다.\n20…","fields":{"slug":"/blog/2022/the-nature-of-software-development/"},"frontmatter":{"date":"03 June, 2022","title":"The Nature of Software Development","description":"[책] The Nature of Software Development - 간결하게, 가치 있게, 하나씩 완성하기","tags":["book","agile"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%A0%95%EB%A6%AC\">정리</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%B3%B8%EC%A7%88%EC%A0%81-%EB%B0%A9%EB%B2%95\">본질적 방법</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B0%80%EC%B9%98\">가치</a></p>\n<ul>\n<li><a href=\"#%ED%94%BC%EC%B2%98-%EB%8B%A8%EC%9C%84-%EA%B0%9C%EB%B0%9C%EC%9D%98-%EC%9D%B4%EC%A0%90\">피처 단위 개발의 이점</a></li>\n<li><a href=\"#%EC%A1%B0%EC%A7%81-%EA%B5%AC%EC%84%B1\">조직 구성</a></li>\n<li><a href=\"#%EA%B3%84%ED%9A%8D\">계획</a></li>\n<li><a href=\"#%EA%B0%9C%EB%B0%9C\">개발</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A1%B0%EC%96%B8\">조언</a></p>\n<ul>\n<li><a href=\"#%EC%84%B1%EC%9E%A5%ED%95%98%EB%8A%94-%EA%B0%9C%EB%B0%9C%ED%8C%80\">성장하는 개발팀</a></li>\n<li><a href=\"#%EC%95%95%EB%B0%95\">압박</a></li>\n<li><a href=\"#%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81\">리팩토링</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%9B%84%EA%B8%B0\">후기</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"행위 주도 개발(BDD)은 피드백 루프 feedback loop를 최소화 하는 것입니다.\n이는 소프트웨어 개발 프랙티스(실천, 관례)의 발전에 있어 논리적 진전입니다.\n이 글에서는 개념과 그 기원에 대해 설명합니다. 폭포수 Waterfall…","fields":{"slug":"/blog/2022/behavior-driven-development/"},"frontmatter":{"date":"16 May, 2022","title":"행위 주도 개발 (BDD)","description":"[번역] Behavior-Driven Development","tags":["bdd","test","translation"]},"tableOfContents":"<ul>\n<li><a href=\"#%ED%8F%AD%ED%8F%AC%EC%88%98-smallwaterfallsmall\">폭포수 <small>Waterfall</small></a></li>\n<li><a href=\"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%EC%B5%9C%EC%A0%81%ED%99%94-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9A%B0%EC%84%A0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-smalltest-first-programmingsmall\">첫 번째 최적화: 테스트 우선 프로그래밍 <small>Test-First Programming</small></a></li>\n<li><a href=\"#%EB%82%98%EC%A4%91%EC%97%90-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%98%EB%8A%94-%EB%AC%B8%EC%A0%9C\">나중에 테스트를 작성하는 문제</a></li>\n<li><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%A3%BC%EB%8F%84-%EA%B0%9C%EB%B0%9C-smalltest-driven-developmentsmall\">테스트 주도 개발 <small>Test-Driven Development</small></a></li>\n<li><a href=\"#%ED%96%89%EC%9C%84-%EC%A3%BC%EB%8F%84-%EA%B0%9C%EB%B0%9C-smallbehavior-driven-developmentsmall-%EB%A1%9C-%EB%8B%A4%EC%9D%8C-%EB%8B%A8%EA%B3%84-%EB%A7%8C%EB%93%A4%EA%B8%B0\">행위 주도 개발 <small>Behavior-Driven Development</small> 로 다음 단계 만들기</a></li>\n<li><a href=\"#bdd-%EC%96%B4%EB%96%BB%EA%B2%8C%EA%B0%80-%EC%95%84%EB%8B%88%EB%9D%BC-%EB%AC%B4%EC%97%87%EC%9D%84\">BDD: 어떻게가 아니라 무엇을</a></li>\n<li><a href=\"#bdd%EB%8A%94-ui-%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B0%80-%EC%95%84%EB%8B%99%EB%8B%88%EB%8B%A4\">BDD는 UI 테스트가 아닙니다</a></li>\n<li><a href=\"#bdd%EB%8A%94-%EB%AA%A8%EB%93%A0-%EB%A0%88%EB%B2%A8%EC%97%90%EC%84%9C-%EB%8F%99%EC%9E%91%ED%95%A9%EB%8B%88%EB%8B%A4\">BDD는 모든 레벨에서 동작합니다</a></li>\n<li><a href=\"#%EB%8D%94-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EC%A7%84%ED%96%89\">더 빠르게 진행</a></li>\n<li><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></li>\n<li><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></li>\n</ul>"}},{"node":{"excerpt":"이제 React 18을 npm에서 사용할 수 있습니다! 최근 게시물에서 React 18로 앱 업그레이드 단계별 가이드를 공유했습니다.\n이 게시물에서는 React 1…","fields":{"slug":"/blog/2022/react-18/"},"frontmatter":{"date":"03 April, 2022","title":"React v18.0","description":"[번역] React v18.0","tags":["react","javascript","typescript","translation"]},"tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%9D%B4%EC%A0%9C-react-18%EC%9D%84-npm%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%A0-%EC%88%98-%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4\">이제 React 18을 npm에서 사용할 수 있습니다!</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%8F%99%EC%8B%9C%EC%84%B1-smallconcurrentsmall-react%EB%9E%80\">동시성 <small>Concurrent</small> React란?</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8F%99%EC%8B%9C%EC%84%B1-%EA%B8%B0%EB%8A%A5%EC%9D%84-%EC%A0%90%EC%A7%84%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%8F%84%EC%9E%85\">동시성 기능을 점진적으로 도입</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC%EC%97%90%EC%84%9C%EC%9D%98-%EC%84%9C%EC%8A%A4%ED%8E%9C%EC%8A%A4-smallsuspensesmall\">데이터 프레임워크에서의 서스펜스 <small>Suspense</small></a></p>\n</li>\n<li>\n<p><a href=\"#server-components%EB%8A%94-%EC%95%84%EC%A7%81-%EA%B0%9C%EB%B0%9C-%EC%A4%91%EC%9E%85%EB%8B%88%EB%8B%A4\">Server Components는 아직 개발 중입니다</a></p>\n</li>\n<li>\n<p><a href=\"#react-18%EC%9D%98-%EC%83%88%EB%A1%9C%EC%9A%B4-%EA%B8%B0%EB%8A%A5\">React 18의 새로운 기능</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%83%88-%EA%B8%B0%EB%8A%A5-%EC%9E%90%EB%8F%99-%EB%B0%B0%EC%B9%98-smallautomatic-batchingsmall\">새 기능: 자동 배치 <small>Automatic Batching</small></a></p>\n</li>\n<li>\n<p><a href=\"#%EC%83%88-%EA%B8%B0%EB%8A%A5-%ED%8A%B8%EB%9E%9C%EC%A7%80%EC%85%98-smalltransitions-%EC%A0%84%ED%99%98small\">새 기능: 트랜지션 <small>Transitions (전환)</small></a></p>\n</li>\n<li>\n<p><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%84%9C%EC%8A%A4%ED%8E%9C%EC%8A%A4-smallsuspensesmall-%EA%B8%B0%EB%8A%A5\">새로운 서스펜스 <small>Suspense</small> 기능</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EC%99%80-%EC%84%9C%EB%B2%84-%EB%A0%8C%EB%8D%94%EB%A7%81-apis\">새로운 클라이언트와 서버 렌더링 APIs</a></p>\n<ul>\n<li><a href=\"#react-dom-client\">React DOM Client</a></li>\n<li><a href=\"#react-dom-server\">React DOM Server</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%97%84%EA%B2%A9-%EB%AA%A8%EB%93%9C-smallstrict-modesmall-%EB%8F%99%EC%9E%91\">새로운 엄격 모드 <small>Strict Mode</small> 동작</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%ED%9B%85-smallhookssmall\">새로운 훅 <small>Hooks</small></a></p>\n<ul>\n<li><a href=\"#useid\">useId</a></li>\n<li><a href=\"#usetransition\">useTransition</a></li>\n<li><a href=\"#usedeferredvalue\">useDeferredValue</a></li>\n<li><a href=\"#usesyncexternalstore\">useSyncExternalStore</a></li>\n<li><a href=\"#useinsertioneffect\">useInsertionEffect</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"첫 번째: Readonly<T…","fields":{"slug":"/blog/2021/3-typescript-tricks/"},"frontmatter":{"date":"27 October, 2021","title":"Typescript를 배웠을 때 알았으면 좋았을 3가지 트릭","description":"[번역] 3 TypeScript Tricks I wish I knew when I learned TypeScript","tags":["typescript","translation"]},"tableOfContents":"<ul>\n<li><a href=\"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-readonlyt\">첫 번째: Readonly&#x3C;T></a></li>\n<li><a href=\"#%EB%91%90-%EB%B2%88%EC%A7%B8-any-vs-unknown\">두 번째: Any vs Unknown</a></li>\n<li><a href=\"#%EC%84%B8-%EB%B2%88%EC%A7%B8-typing-objects-with-records\">세 번째: Typing Objects with Records</a></li>\n<li><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></li>\n<li><a href=\"#%EB%B2%88%EC%97%AD%EC%9D%98-%EB%B3%80\">번역의 변</a></li>\n</ul>"}},{"node":{"excerpt":"JavaScript는 세계에서 가장 사랑받기도 하고 싫어하기도 하는 언어 중 하나입니다.\n강력해서 사랑받고, 그리고 JavaScript…","fields":{"slug":"/blog/2021/how-javascript-works-visually-explained/"},"frontmatter":{"date":"02 October, 2021","title":"JavaScript 작동 방식 (시각적으로 설명)","description":"[번역] How JavaScript Works🔥 🤖 (Visually Explained)","tags":["javascript","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%8B%A4%ED%96%89-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-smallexecution-contextsmall\">실행 컨텍스트 <small>Execution Context</small></a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#javascript%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B2%83%EC%9D%80-%EC%8B%A4%ED%96%89-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%95%88%EC%97%90%EC%84%9C-%EC%9D%BC%EC%96%B4%EB%82%A9%EB%8B%88%EB%8B%A4\">“JavaScript의 모든 것은 실행 컨텍스트 안에서 일어납니다.”</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%BD%94%EB%93%9C-%EC%8B%A4%ED%96%89\">코드 실행</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%8B%A4%ED%96%89-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8%EC%97%90%EC%84%9C-%ED%95%A8%EC%88%98%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%98%B8%EC%B6%9C%EB%90%A9%EB%8B%88%EA%B9%8C\">실행 컨텍스트에서 함수는 어떻게 호출됩니까?</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%BD%9C-%EC%8A%A4%ED%83%9D-smallcall-stacksmall\">콜 스택 <small>Call Stack</small></a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"소개 이벤트 루프는 Node.js를 이해하는 데 가장 중요한 측면 중 하나입니다. 왜 그렇게 중요합니까?\n이윤 즉, Node.js가 어떻게 비동기적이고 논 블로킹 I/O를 가질 수 있는지를 설명하고, 나아가 기본적으로 Node.js…","fields":{"slug":"/blog/2021/the-nodejs-event-loop/"},"frontmatter":{"date":"07 September, 2021","title":"Node.js 이벤트 루프","description":"[번역] The Node.js Event Loop","tags":["nodejs","javascript","translation"]},"tableOfContents":"<ul>\n<li><a href=\"#%EC%86%8C%EA%B0%9C\">소개</a></li>\n<li><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%A3%A8%ED%94%84-%EB%B8%94%EB%A1%9C%ED%82%B9-smallblocking-the-event-loopsmall\">이벤트 루프 블로킹 <small>Blocking the event loop</small></a></li>\n<li><a href=\"#%EC%BD%9C-%EC%8A%A4%ED%83%9D-smallthe-call-stacksmall\">콜 스택 <small>The call stack</small></a></li>\n<li><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%A3%A8%ED%94%84-%EC%84%A4%EB%AA%85\">간단한 이벤트 루프 설명</a></li>\n<li><a href=\"#%ED%81%90-%ED%95%A8%EC%88%98-%EC%8B%A4%ED%96%89-smallqueuing-function-executionsmall\">큐 함수 실행 <small>Queuing function execution</small></a></li>\n<li><a href=\"#%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%81%90-smallthe-message-queuesmall\">메시지 큐 <small>The Message Queue</small></a></li>\n<li><a href=\"#es6-%EC%9E%A1-%ED%81%90-smalles6-job-queuesmall\">ES6 잡 큐 <small>ES6 Job Queue</small></a></li>\n<li><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></li>\n</ul>"}},{"node":{"excerpt":"5년보다 전에, 우리는 개발자가 슬랙에서 쉽게 앱을 구축하고 앱 디렉터리에 게시하는 방법을 제공하는 슬랙 플랫폼을 론칭했습니다.\n오늘날, 수백만 명의 사용자가 슬랙으로 작업을 가져오고 있으며, 플랫폼에서 885,00…","fields":{"slug":"/blog/2021/how-we-design-our-apis-at-slack/"},"frontmatter":{"date":"25 August, 2021","title":"Slack에서 API를 설계하는 방법","description":"[번역] How We Design Our APIs at Slack","tags":["api","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%84%A4%EA%B3%84-%EC%9B%90%EC%B9%99\">설계 원칙</a></p>\n<ul>\n<li><a href=\"#1-%ED%95%9C-%EA%B0%80%EC%A7%80-%EC%9D%BC%EC%9D%84-%EC%9E%98-%ED%95%B4%EB%82%B4%EB%9D%BC\">1. 한 가지 일을 잘 해내라</a></li>\n<li><a href=\"#2-%EB%B9%A0%EB%A5%B4%EA%B3%A0-%EC%89%BD%EA%B2%8C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%9D%BC\">2. 빠르고 쉽게 시작하라</a></li>\n<li><a href=\"#3-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B8-%EC%9D%BC%EA%B4%80%EC%84%B1%EC%9D%84-%EC%9C%84%ED%95%B4-%EB%85%B8%EB%A0%A5%ED%95%98%EB%9D%BC\">3. 직관적인 일관성을 위해 노력하라</a></li>\n<li><a href=\"#4-%EC%9D%98%EB%AF%B8%EC%9E%88%EB%8A%94-%EC%97%90%EB%9F%AC%EB%A5%BC-%EB%B0%98%ED%99%98%ED%95%98%EB%9D%BC\">4. 의미있는 에러를 반환하라</a></li>\n<li><a href=\"#5-%EA%B7%9C%EB%AA%A8%EC%99%80-%EC%84%B1%EB%8A%A5%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%84%A4%EA%B3%84%EB%A5%BC-%ED%95%98%EB%9D%BC\">5. 규모와 성능을 위한 설계를 하라</a></li>\n<li><a href=\"#6-%ED%98%B8%ED%99%98%EC%84%B1%EC%9D%84-%EA%B9%A8%EB%8A%94-%EB%B3%80%EA%B2%BD-%EC%82%AC%ED%95%AD-smallbreaking-changessmall%EC%9D%84-%ED%94%BC%ED%95%98%EB%9D%BC\">6. 호환성을 깨는 변경 사항 <small>breaking changes</small>을 피하라</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%84%A4%EA%B3%84-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4\">설계 프로세스</a></p>\n<ul>\n<li><a href=\"#1-api-%EC%82%AC%EC%96%91-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\">1. API 사양 작성하기</a></li>\n<li><a href=\"#2-%EB%82%B4%EB%B6%80-api-%EB%A6%AC%EB%B7%B0\">2. 내부 API 리뷰</a></li>\n<li><a href=\"#3-%EC%B4%88%EA%B8%B0-%ED%8C%8C%ED%8A%B8%EB%84%88-%ED%94%BC%EB%93%9C%EB%B0%B1\">3. 초기 파트너 피드백</a></li>\n<li><a href=\"#4-%EB%B2%A0%ED%83%80-%ED%85%8C%EC%8A%A4%ED%8A%B8\">4. 베타 테스트</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%9C%A0%EC%97%B0%EC%84%B1-%EC%9C%A0%EC%A7%80\">유연성 유지</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}}]}},"pageContext":{"limit":10,"skip":0,"numPages":3,"currentPage":1}},"staticQueryHashes":["253152893","3980716358"],"slicesMap":{}}