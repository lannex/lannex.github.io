{"componentChunkName":"component---src-templates-blog-tag-tsx","path":"/blog/tags/translation","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"excerpt":"…","fields":{"slug":"/blog/2022/ddd-hexagonal-onion-clean-cqrs-1/"},"frontmatter":{"date":"30 September, 2022","title":"DDD, Hexagonal, Onion, Clean, CQRS, ... 모두 종합한 방법 - 1부","description":"[번역] DDD, Hexagonal, Onion, Clean, CQRS, ... How I put it all together","tags":["ddd","hexagonal","onion","cqrs","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%EA%B8%B0%EC%B4%88-%EB%B8%94%EB%A1%9D\">시스템의 기초 블록</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8F%84%EA%B5%AC\">도구</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8F%84%EA%B5%AC%EC%99%80-%EC%A0%84%EB%8B%AC-%EB%A9%94%EC%BB%A4%EB%8B%88%EC%A6%98%EC%9D%84-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BD%94%EC%96%B4%EC%97%90-%EC%97%B0%EA%B2%B0\">도구와 전달 메커니즘을 애플리케이션 코어에 연결</a></p>\n<ul>\n<li><a href=\"#%ED%8F%AC%ED%8A%B8\">포트</a></li>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%98%90%EB%8A%94-%EC%A3%BC%EB%8F%84%ED%95%98%EB%8A%94-%EC%96%B4%EB%8C%91%ED%84%B0-smallprimary-or-driving-adapterssmall\">기본 또는 주도하는 어댑터 <small>Primary or Driving Adapters</small></a></li>\n<li><a href=\"#%EB%B3%B4%EC%A1%B0-%EB%98%90%EB%8A%94-%EC%A3%BC%EB%8F%84%EB%90%98%EB%8A%94-%EC%96%B4%EB%8C%91%ED%84%B0-smallsecondary-or-driven-adapterssmall\">보조 또는 주도되는 어댑터 <small>Secondary or Driven Adapters</small></a></li>\n<li><a href=\"#%EC%A0%9C%EC%96%B4-%EB%B0%98%EC%A0%84-smallinversion-of-controlsmall\">제어 반전 <small>Inversion of control</small></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"행위 주도 개발(BDD)은 피드백 루프 feedback loop를 최소화 하는 것입니다.\n이는 소프트웨어 개발 프랙티스(실천, 관례)의 발전에 있어 논리적 진전입니다.\n이 글에서는 개념과 그 기원에 대해 설명합니다. 폭포수 Waterfall…","fields":{"slug":"/blog/2022/behavior-driven-development/"},"frontmatter":{"date":"16 May, 2022","title":"행위 주도 개발 (BDD)","description":"[번역] Behavior-Driven Development","tags":["bdd","test","translation"]},"tableOfContents":"<ul>\n<li><a href=\"#%ED%8F%AD%ED%8F%AC%EC%88%98-smallwaterfallsmall\">폭포수 <small>Waterfall</small></a></li>\n<li><a href=\"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%EC%B5%9C%EC%A0%81%ED%99%94-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9A%B0%EC%84%A0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-smalltest-first-programmingsmall\">첫 번째 최적화: 테스트 우선 프로그래밍 <small>Test-First Programming</small></a></li>\n<li><a href=\"#%EB%82%98%EC%A4%91%EC%97%90-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%98%EB%8A%94-%EB%AC%B8%EC%A0%9C\">나중에 테스트를 작성하는 문제</a></li>\n<li><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%A3%BC%EB%8F%84-%EA%B0%9C%EB%B0%9C-smalltest-driven-developmentsmall\">테스트 주도 개발 <small>Test-Driven Development</small></a></li>\n<li><a href=\"#%ED%96%89%EC%9C%84-%EC%A3%BC%EB%8F%84-%EA%B0%9C%EB%B0%9C-smallbehavior-driven-developmentsmall-%EB%A1%9C-%EB%8B%A4%EC%9D%8C-%EB%8B%A8%EA%B3%84-%EB%A7%8C%EB%93%A4%EA%B8%B0\">행위 주도 개발 <small>Behavior-Driven Development</small> 로 다음 단계 만들기</a></li>\n<li><a href=\"#bdd-%EC%96%B4%EB%96%BB%EA%B2%8C%EA%B0%80-%EC%95%84%EB%8B%88%EB%9D%BC-%EB%AC%B4%EC%97%87%EC%9D%84\">BDD: 어떻게가 아니라 무엇을</a></li>\n<li><a href=\"#bdd%EB%8A%94-ui-%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B0%80-%EC%95%84%EB%8B%99%EB%8B%88%EB%8B%A4\">BDD는 UI 테스트가 아닙니다</a></li>\n<li><a href=\"#bdd%EB%8A%94-%EB%AA%A8%EB%93%A0-%EB%A0%88%EB%B2%A8%EC%97%90%EC%84%9C-%EB%8F%99%EC%9E%91%ED%95%A9%EB%8B%88%EB%8B%A4\">BDD는 모든 레벨에서 동작합니다</a></li>\n<li><a href=\"#%EB%8D%94-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EC%A7%84%ED%96%89\">더 빠르게 진행</a></li>\n<li><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></li>\n<li><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></li>\n</ul>"}},{"node":{"excerpt":"이제 React 18을 npm에서 사용할 수 있습니다! 최근 게시물에서 React 18로 앱 업그레이드 단계별 가이드를 공유했습니다.\n이 게시물에서는 React 1…","fields":{"slug":"/blog/2022/react-18/"},"frontmatter":{"date":"03 April, 2022","title":"React v18.0","description":"[번역] React v18.0","tags":["react","javascript","typescript","translation"]},"tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%9D%B4%EC%A0%9C-react-18%EC%9D%84-npm%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%A0-%EC%88%98-%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4\">이제 React 18을 npm에서 사용할 수 있습니다!</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%8F%99%EC%8B%9C%EC%84%B1-smallconcurrentsmall-react%EB%9E%80\">동시성 <small>Concurrent</small> React란?</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8F%99%EC%8B%9C%EC%84%B1-%EA%B8%B0%EB%8A%A5%EC%9D%84-%EC%A0%90%EC%A7%84%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%8F%84%EC%9E%85\">동시성 기능을 점진적으로 도입</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC%EC%97%90%EC%84%9C%EC%9D%98-%EC%84%9C%EC%8A%A4%ED%8E%9C%EC%8A%A4-smallsuspensesmall\">데이터 프레임워크에서의 서스펜스 <small>Suspense</small></a></p>\n</li>\n<li>\n<p><a href=\"#server-components%EB%8A%94-%EC%95%84%EC%A7%81-%EA%B0%9C%EB%B0%9C-%EC%A4%91%EC%9E%85%EB%8B%88%EB%8B%A4\">Server Components는 아직 개발 중입니다</a></p>\n</li>\n<li>\n<p><a href=\"#react-18%EC%9D%98-%EC%83%88%EB%A1%9C%EC%9A%B4-%EA%B8%B0%EB%8A%A5\">React 18의 새로운 기능</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%83%88-%EA%B8%B0%EB%8A%A5-%EC%9E%90%EB%8F%99-%EB%B0%B0%EC%B9%98-smallautomatic-batchingsmall\">새 기능: 자동 배치 <small>Automatic Batching</small></a></p>\n</li>\n<li>\n<p><a href=\"#%EC%83%88-%EA%B8%B0%EB%8A%A5-%ED%8A%B8%EB%9E%9C%EC%A7%80%EC%85%98-smalltransitions-%EC%A0%84%ED%99%98small\">새 기능: 트랜지션 <small>Transitions (전환)</small></a></p>\n</li>\n<li>\n<p><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%84%9C%EC%8A%A4%ED%8E%9C%EC%8A%A4-smallsuspensesmall-%EA%B8%B0%EB%8A%A5\">새로운 서스펜스 <small>Suspense</small> 기능</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EC%99%80-%EC%84%9C%EB%B2%84-%EB%A0%8C%EB%8D%94%EB%A7%81-apis\">새로운 클라이언트와 서버 렌더링 APIs</a></p>\n<ul>\n<li><a href=\"#react-dom-client\">React DOM Client</a></li>\n<li><a href=\"#react-dom-server\">React DOM Server</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%97%84%EA%B2%A9-%EB%AA%A8%EB%93%9C-smallstrict-modesmall-%EB%8F%99%EC%9E%91\">새로운 엄격 모드 <small>Strict Mode</small> 동작</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%ED%9B%85-smallhookssmall\">새로운 훅 <small>Hooks</small></a></p>\n<ul>\n<li><a href=\"#useid\">useId</a></li>\n<li><a href=\"#usetransition\">useTransition</a></li>\n<li><a href=\"#usedeferredvalue\">useDeferredValue</a></li>\n<li><a href=\"#usesyncexternalstore\">useSyncExternalStore</a></li>\n<li><a href=\"#useinsertioneffect\">useInsertionEffect</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"첫 번째: Readonly<T…","fields":{"slug":"/blog/2021/3-typescript-tricks/"},"frontmatter":{"date":"27 October, 2021","title":"Typescript를 배웠을 때 알았으면 좋았을 3가지 트릭","description":"[번역] 3 TypeScript Tricks I wish I knew when I learned TypeScript","tags":["typescript","translation"]},"tableOfContents":"<ul>\n<li><a href=\"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-readonlyt\">첫 번째: Readonly&#x3C;T></a></li>\n<li><a href=\"#%EB%91%90-%EB%B2%88%EC%A7%B8-any-vs-unknown\">두 번째: Any vs Unknown</a></li>\n<li><a href=\"#%EC%84%B8-%EB%B2%88%EC%A7%B8-typing-objects-with-records\">세 번째: Typing Objects with Records</a></li>\n<li><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></li>\n<li><a href=\"#%EB%B2%88%EC%97%AD%EC%9D%98-%EB%B3%80\">번역의 변</a></li>\n</ul>"}},{"node":{"excerpt":"JavaScript는 세계에서 가장 사랑받기도 하고 싫어하기도 하는 언어 중 하나입니다.\n강력해서 사랑받고, 그리고 JavaScript…","fields":{"slug":"/blog/2021/how-javascript-works-visually-explained/"},"frontmatter":{"date":"02 October, 2021","title":"JavaScript 작동 방식 (시각적으로 설명)","description":"[번역] How JavaScript Works🔥 🤖 (Visually Explained)","tags":["javascript","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%8B%A4%ED%96%89-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-smallexecution-contextsmall\">실행 컨텍스트 <small>Execution Context</small></a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#javascript%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B2%83%EC%9D%80-%EC%8B%A4%ED%96%89-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%95%88%EC%97%90%EC%84%9C-%EC%9D%BC%EC%96%B4%EB%82%A9%EB%8B%88%EB%8B%A4\">“JavaScript의 모든 것은 실행 컨텍스트 안에서 일어납니다.”</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%BD%94%EB%93%9C-%EC%8B%A4%ED%96%89\">코드 실행</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%8B%A4%ED%96%89-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8%EC%97%90%EC%84%9C-%ED%95%A8%EC%88%98%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%98%B8%EC%B6%9C%EB%90%A9%EB%8B%88%EA%B9%8C\">실행 컨텍스트에서 함수는 어떻게 호출됩니까?</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%BD%9C-%EC%8A%A4%ED%83%9D-smallcall-stacksmall\">콜 스택 <small>Call Stack</small></a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"소개 이벤트 루프는 Node.js를 이해하는 데 가장 중요한 측면 중 하나입니다. 왜 그렇게 중요합니까?\n이윤 즉, Node.js가 어떻게 비동기적이고 논 블로킹 I/O를 가질 수 있는지를 설명하고, 나아가 기본적으로 Node.js…","fields":{"slug":"/blog/2021/the-nodejs-event-loop/"},"frontmatter":{"date":"07 September, 2021","title":"Node.js 이벤트 루프","description":"[번역] The Node.js Event Loop","tags":["nodejs","javascript","translation"]},"tableOfContents":"<ul>\n<li><a href=\"#%EC%86%8C%EA%B0%9C\">소개</a></li>\n<li><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%A3%A8%ED%94%84-%EB%B8%94%EB%A1%9C%ED%82%B9-smallblocking-the-event-loopsmall\">이벤트 루프 블로킹 <small>Blocking the event loop</small></a></li>\n<li><a href=\"#%EC%BD%9C-%EC%8A%A4%ED%83%9D-smallthe-call-stacksmall\">콜 스택 <small>The call stack</small></a></li>\n<li><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%A3%A8%ED%94%84-%EC%84%A4%EB%AA%85\">간단한 이벤트 루프 설명</a></li>\n<li><a href=\"#%ED%81%90-%ED%95%A8%EC%88%98-%EC%8B%A4%ED%96%89-smallqueuing-function-executionsmall\">큐 함수 실행 <small>Queuing function execution</small></a></li>\n<li><a href=\"#%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%81%90-smallthe-message-queuesmall\">메시지 큐 <small>The Message Queue</small></a></li>\n<li><a href=\"#es6-%EC%9E%A1-%ED%81%90-smalles6-job-queuesmall\">ES6 잡 큐 <small>ES6 Job Queue</small></a></li>\n<li><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></li>\n</ul>"}},{"node":{"excerpt":"5년보다 전에, 우리는 개발자가 슬랙에서 쉽게 앱을 구축하고 앱 디렉터리에 게시하는 방법을 제공하는 슬랙 플랫폼을 론칭했습니다.\n오늘날, 수백만 명의 사용자가 슬랙으로 작업을 가져오고 있으며, 플랫폼에서 885,00…","fields":{"slug":"/blog/2021/how-we-design-our-apis-at-slack/"},"frontmatter":{"date":"25 August, 2021","title":"Slack에서 API를 설계하는 방법","description":"[번역] How We Design Our APIs at Slack","tags":["api","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%84%A4%EA%B3%84-%EC%9B%90%EC%B9%99\">설계 원칙</a></p>\n<ul>\n<li><a href=\"#1-%ED%95%9C-%EA%B0%80%EC%A7%80-%EC%9D%BC%EC%9D%84-%EC%9E%98-%ED%95%B4%EB%82%B4%EB%9D%BC\">1. 한 가지 일을 잘 해내라</a></li>\n<li><a href=\"#2-%EB%B9%A0%EB%A5%B4%EA%B3%A0-%EC%89%BD%EA%B2%8C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%9D%BC\">2. 빠르고 쉽게 시작하라</a></li>\n<li><a href=\"#3-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B8-%EC%9D%BC%EA%B4%80%EC%84%B1%EC%9D%84-%EC%9C%84%ED%95%B4-%EB%85%B8%EB%A0%A5%ED%95%98%EB%9D%BC\">3. 직관적인 일관성을 위해 노력하라</a></li>\n<li><a href=\"#4-%EC%9D%98%EB%AF%B8%EC%9E%88%EB%8A%94-%EC%97%90%EB%9F%AC%EB%A5%BC-%EB%B0%98%ED%99%98%ED%95%98%EB%9D%BC\">4. 의미있는 에러를 반환하라</a></li>\n<li><a href=\"#5-%EA%B7%9C%EB%AA%A8%EC%99%80-%EC%84%B1%EB%8A%A5%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%84%A4%EA%B3%84%EB%A5%BC-%ED%95%98%EB%9D%BC\">5. 규모와 성능을 위한 설계를 하라</a></li>\n<li><a href=\"#6-%ED%98%B8%ED%99%98%EC%84%B1%EC%9D%84-%EA%B9%A8%EB%8A%94-%EB%B3%80%EA%B2%BD-%EC%82%AC%ED%95%AD-smallbreaking-changessmall%EC%9D%84-%ED%94%BC%ED%95%98%EB%9D%BC\">6. 호환성을 깨는 변경 사항 <small>breaking changes</small>을 피하라</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%84%A4%EA%B3%84-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4\">설계 프로세스</a></p>\n<ul>\n<li><a href=\"#1-api-%EC%82%AC%EC%96%91-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\">1. API 사양 작성하기</a></li>\n<li><a href=\"#2-%EB%82%B4%EB%B6%80-api-%EB%A6%AC%EB%B7%B0\">2. 내부 API 리뷰</a></li>\n<li><a href=\"#3-%EC%B4%88%EA%B8%B0-%ED%8C%8C%ED%8A%B8%EB%84%88-%ED%94%BC%EB%93%9C%EB%B0%B1\">3. 초기 파트너 피드백</a></li>\n<li><a href=\"#4-%EB%B2%A0%ED%83%80-%ED%85%8C%EC%8A%A4%ED%8A%B8\">4. 베타 테스트</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%9C%A0%EC%97%B0%EC%84%B1-%EC%9C%A0%EC%A7%80\">유연성 유지</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"시작하기에 앞서 Fabric이라는 서비스에서 운영하는 블로그 글로 이커머스 데이터 모델을 구축할 때 생각해볼 만한 내용이라 허락받고 번역합니다. 기본적으로 API-first…","fields":{"slug":"/blog/2021/building-a-scalable-e-commerce-data-model/"},"frontmatter":{"date":"17 January, 2021","title":"확장 가능한 이커머스 데이터 모델 구축","description":"[번역] Building a Scalable E-Commerce Data Model","tags":["database","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\">시작하기에 앞서</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9D%B4%EC%BB%A4%EB%A8%B8%EC%8A%A4-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8\">이커머스 데이터 모델</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B3%A0%EA%B0%9D%EC%9D%80-%EB%88%84%EA%B5%AC%EC%9E%85%EB%8B%88%EA%B9%8C\">고객은 누구입니까?</a></p>\n<ul>\n<li><a href=\"#%EA%B9%8A%EC%9D%B4-%EC%9E%88%EA%B2%8C-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-addresses\">깊이 있게 들어가기: Addresses</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A0%9C%ED%92%88%EA%B3%BC-%EC%B9%B4%ED%83%88%EB%A1%9C%EA%B7%B8%EB%A5%BC-%EA%B5%AC%EC%84%B1%ED%95%A9%EB%8B%88%EA%B9%8C\">어떻게 제품과 카탈로그를 구성합니까?</a></p>\n<ul>\n<li><a href=\"#%EA%B9%8A%EC%9D%B4-%EC%9E%88%EA%B2%8C-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-pricing\">깊이 있게 들어가기: Pricing</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A3%BC%EB%AC%B8%EC%9D%84-%EA%B0%84%EC%86%8C%ED%99%94%ED%95%A9%EB%8B%88%EA%B9%8C\">어떻게 주문을 간소화합니까?</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8B%A4%EB%A5%B8-%EB%B0%A9%EB%B2%95-fabric\">다른 방법 (Fabric)</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"소개 Rust는 garbage-collector…","fields":{"slug":"/blog/2021/why-rust-is-a-modern-programming-language/"},"frontmatter":{"date":"01 January, 2021","title":"Rust가 '현대적인' 프로그래밍 언어인 이유","description":"[번역] Why Rust is a 'modern' programming language","tags":["rust","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%86%8C%EA%B0%9C\">소개</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%98%84%EB%8C%80%EC%A0%81%EC%9D%B8%EC%9D%B4-%EB%AC%B4%EC%8A%A8-%EB%9C%BB%EC%9E%85%EB%8B%88%EA%B9%8C\">“현대적인”이 무슨 뜻입니까?</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A0%95%EC%A0%81-%ED%83%80%EC%9E%85\">정적 타입</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%95%88%EC%A0%84%EC%84%B1\">메모리 안전성</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%98%84%EB%8C%80%EC%A0%81%EC%9D%B8\">“현대적인”</a></p>\n<ul>\n<li><a href=\"#%EB%B9%84%EA%B5%AC%EC%A1%B0%ED%99%94-destructuring\">비구조화 (Destructuring)</a></li>\n<li><a href=\"#%ED%8C%A8%ED%84%B4-%EB%A7%A4%EC%B9%AD-pattern-matching\">패턴 매칭 (Pattern matching)</a></li>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%B6%88%EB%B3%80%EC%84%B1--%EC%84%80%EB%8F%84%EC%9E%89-immutability-by-default--shadowing\">기본적으로 불변성 &#x26; 섀도잉 (Immutability by default &#x26; shadowing)</a></li>\n<li><a href=\"#no-null\">No null!</a></li>\n<li><a href=\"#%EC%9D%BC%EA%B8%89-%EC%97%B4%EA%B1%B0%ED%98%95enum-%EC%A7%80%EC%9B%90\">일급 열거형(Enum) 지원</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%8A%B9%EC%84%B1-traits\">특성 (Traits)</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"출처 70 JavaScript Interview Questions 시작하며 글이 긴 관계로 4부로 나눠서 진행하며 1부는 1-17번 질문, 2부는 18-36번, 3부는 37-54번, 4부는 55-70번 질문으로 구성되어 있다. 7…","fields":{"slug":"/blog/2020/70-JavaScript-Interview-Questions-4/"},"frontmatter":{"date":"08 February, 2020","title":"70 자바스크립트 인터뷰 질문 - 4부(번역)","description":"70 JavaScript Interview Questions","tags":["javascript","interview","translation"]},"tableOfContents":"<ul>\n<li><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></li>\n<li><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EB%A9%B0\">시작하며</a></li>\n<li><a href=\"#hi-guys-good-day-and-a-happy-new-year-\">Hi Guys Good Day and a Happy New Year 🎆🎆🎆!</a></li>\n<li><a href=\"#%EC%A7%88%EB%AC%B8-a-name0a\">질문 <a name=\"0\"></a></a></li>\n<li><a href=\"#55-%EC%95%94%EB%AC%B5%EC%A0%81smallimplicitsmall-%EA%B3%BC-%EB%AA%85%EC%8B%9C%EC%A0%81smallexplicitsmall-%EA%B0%95%EC%A0%9C%EB%B3%80%ED%99%98smallcoercionsmall%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name55a\">55. <strong>암묵적<small>(Implicit)</small></strong> 과 <strong>명시적<small>(Explicit)</small></strong> 강제변환<small>(Coercion)</small>의 차이점은 무엇인가? <a name=\"55\"></a></a></li>\n<li><a href=\"#56-nan%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-%EA%B0%92%EC%9D%B4-nan%EC%9D%B8%EC%A7%80-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name56a\">56. <code class=\"language-text\">NaN</code>이란 무엇인가? 값이 <code class=\"language-text\">NaN</code>인지 확인하는 방법은 무엇인가? <a name=\"56\"></a></a></li>\n<li><a href=\"#57-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B0%92%EC%9D%B4-array%EC%9D%B8%EC%A7%80-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94%EA%B0%80-a-name57a\">57. 어떻게 값이 <strong>Array</strong>인지 확인하는가? <a name=\"57\"></a></a></li>\n<li><a href=\"#58--%EB%98%90%EB%8A%94-%EB%AA%A8%EB%93%88%EB%A1%9C-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EA%B3%A0-number%EA%B0%80-%EC%A7%9D%EC%88%98%EC%9D%B8%EC%A7%80-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name58a\">58. <code class=\"language-text\">%</code> 또는 모듈로 연산자를 사용하지 않고 number가 짝수인지 확인하는 방법은 무엇인가? <a name=\"58\"></a></a></li>\n<li><a href=\"#59-%EA%B0%9D%EC%B2%B4%EC%97%90-%ED%8A%B9%EC%A0%95-%EC%86%8D%EC%84%B1%EC%9D%B4-%EC%9E%88%EB%8A%94%EC%A7%80%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%99%95%EC%95%88%ED%95%98%EB%8A%94%EA%B0%80-a-name59a\">59. 객체에 특정 속성이 있는지는 어떻게 확안하는가? <a name=\"59\"></a></a></li>\n<li><a href=\"#60-ajax-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name60a\">60. AJAX 란 무엇인가? <a name=\"60\"></a></a></li>\n<li><a href=\"#61-javascript%EB%A1%9C-%EA%B0%9D%EC%B2%B4%EB%A5%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name61a\">61. JavaScript로 객체를 만드는 방법은 무엇인가? <a name=\"61\"></a></a></li>\n<li><a href=\"#62-objectseal%EA%B3%BC-objectfreeze-%EB%A9%94%EC%84%9C%EB%93%9C%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name62a\">62. <code class=\"language-text\">Object.seal</code>과 <code class=\"language-text\">Object.freeze</code> 메서드의 차이점은 무엇인가? <a name=\"62\"></a></a></li>\n<li><a href=\"#63-%EA%B0%9D%EC%B2%B4%EC%97%90%EC%84%9C-in-%EC%97%B0%EC%82%B0%EC%9E%90%EC%99%80-hasownproperty-%EB%A9%94%EC%84%9C%EB%93%9C%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name63a\">63. 객체에서 <code class=\"language-text\">in</code> 연산자와 <code class=\"language-text\">hasOwnProperty</code> 메서드의 차이점은 무엇인가? <a name=\"63\"></a></a></li>\n<li><a href=\"#64-javasscript%EC%97%90%EC%84%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%B2%98%EB%A6%AC%ED%95%98%EB%8A%94%EA%B0%80-a-name64a\">64. JavasScript에서 어떻게 비동기 코드를 처리하는가? <a name=\"64\"></a></a></li>\n<li><a href=\"#65-%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9Dsmallfunction-expressionsmall%EA%B3%BC-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8smallfunction-declarationsmall%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name65a\">65. 함수 표현식<small>(function expression)</small>과 함수 선언<small>(function declaration)</small>의 차이점은 무엇인가? <a name=\"65\"></a></a></li>\n<li><a href=\"#66-%ED%95%A8%EC%88%98%EB%8A%94-%EB%AA%87-%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95%EC%9C%BC%EB%A1%9C-%ED%98%B8%EC%B6%9C-%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94%EA%B0%80-a-name66a\">66. 함수는 몇 가지 방법으로 호출 할 수 있는가? <a name=\"66\"></a></a></li>\n<li><a href=\"#67-memoization%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%9A%A9%EB%8F%84%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name67a\">67. Memoization란 무엇이며 용도는 무엇인가? <a name=\"67\"></a></a></li>\n<li><a href=\"#68-memoization-helper-%ED%95%A8%EC%88%98%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EC%8B%9C%EC%98%A4-a-name68a\">68. Memoization helper 함수를 구현하시오. <a name=\"68\"></a></a></li>\n<li><a href=\"#69-typeof-null%EC%9D%80-%EC%99%9C-%EA%B0%9D%EC%B2%B4%EB%A5%BC-%EB%A6%AC%ED%84%B4%ED%95%98%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B0%92%EC%9D%B4-null%EC%9D%B8%EC%A7%80-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94%EA%B0%80-a-name69a\">69. <code class=\"language-text\">typeof null</code>은 왜 객체를 리턴하며 어떻게 값이 <code class=\"language-text\">null</code>인지 확인하는가? <a name=\"69\"></a></a></li>\n<li><a href=\"#70-new-%ED%82%A4%EC%9B%8C%EB%93%9C%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%84-%ED%95%98%EB%8A%94%EA%B0%80-a-name70a\">70. <code class=\"language-text\">new</code> 키워드는 무엇을 하는가? <a name=\"70\"></a></a></li>\n<li><a href=\"#thanks-guys-for-reading-this-post\">Thanks guys for reading this post.</a></li>\n</ul>"}},{"node":{"excerpt":"출처 70 JavaScript Interview Questions 시작하며 글이 긴 관계로 4부로 나눠서 진행하며 1부는 1-17번 질문, 2부는 18-36번, 3부는 37-54번, 4부는 55-70번 질문으로 구성되어 있다. 7…","fields":{"slug":"/blog/2020/70-JavaScript-Interview-Questions-3/"},"frontmatter":{"date":"22 January, 2020","title":"70 자바스크립트 인터뷰 질문 - 3부(번역)","description":"70 JavaScript Interview Questions","tags":["javascript","interview","translation"]},"tableOfContents":"<ul>\n<li><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></li>\n<li><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EB%A9%B0\">시작하며</a></li>\n<li><a href=\"#hi-guys-good-day-and-a-happy-new-year-\">Hi Guys Good Day and a Happy New Year 🎆🎆🎆!</a></li>\n<li><a href=\"#%EC%A7%88%EB%AC%B8-a-name0a\">질문 <a name=\"0\"></a></a></li>\n<li><a href=\"#37-arguments-%EA%B0%9D%EC%B2%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name37a\">37. <strong>arguments</strong> 객체란 무엇인가? <a name=\"37\"></a></a></li>\n<li><a href=\"#38-prototype%EC%97%86%EC%9D%B4-%EA%B0%9D%EC%B2%B4%EB%A5%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name38a\">38. <strong>prototype</strong>없이 객체를 만드는 방법은 무엇인가? <a name=\"38\"></a></a></li>\n<li><a href=\"#39-%EC%9D%B4-%ED%95%A8%EC%88%98%EB%A5%BC-%ED%98%B8%EC%B6%9C%ED%95%A0-%EB%95%8C-b%EA%B0%80-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98%EB%A1%9C-%EB%90%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name39a\">39. 이 함수를 호출할 때 <code class=\"language-text\">b</code>가 글로벌 변수로 되는 이유는 무엇인가? <a name=\"39\"></a></a></li>\n<li><a href=\"#40-ecmascript%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name40a\">40. <strong>ECMAScript</strong>이란 무엇인가? <a name=\"40\"></a></a></li>\n<li><a href=\"#41-es6-%EB%98%90%EB%8A%94-ecmascript-2015%EC%9D%98-%EC%83%88%EB%A1%9C%EC%9A%B4-%EA%B8%B0%EB%8A%A5%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name41a\">41. <strong>ES6</strong> 또는 <strong>ECMAScript 2015</strong>의 새로운 기능은 무엇인가? <a name=\"41\"></a></a></li>\n<li><a href=\"#42-var-let-%EB%B0%8F-const-%ED%82%A4%EC%9B%8C%EB%93%9C%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name42a\">42. <code class=\"language-text\">var</code>, <code class=\"language-text\">let</code> 및 <code class=\"language-text\">const</code> 키워드의 차이점은 무엇인가? <a name=\"42\"></a></a></li>\n<li><a href=\"#43-arrow-functions-%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name43a\">43. <strong>Arrow functions</strong> 이란 무엇인가? <a name=\"43\"></a></a></li>\n<li><a href=\"#44-%ED%81%B4%EB%9E%98%EC%8A%A4smallclassessmall%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name44a\">44. 클래스<small>(Classes)</small>란 무엇인가? <a name=\"44\"></a></a></li>\n<li><a href=\"#45-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A6%AC%ED%84%B0%EB%9F%B4smalltemplate-literalssmall-%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name45a\">45. <strong>템플릿 리터럴<small>(Template Literals)</small></strong> 이란 무엇인가? <a name=\"45\"></a></a></li>\n<li><a href=\"#46-%EA%B0%9D%EC%B2%B4-%EA%B5%AC%EC%A1%B0-%EB%B6%84%ED%95%B4smallobject-destructuringsmall%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name46a\">46. 객체 구조 분해<small>(Object Destructuring)</small>란 무엇인가? <a name=\"46\"></a></a></li>\n<li><a href=\"#47-es6-modules%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name47a\">47. <code class=\"language-text\">ES6 Modules</code>이란 무엇인가? <a name=\"47\"></a></a></li>\n<li><a href=\"#48-set-%EA%B0%9D%EC%B2%B4%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%9E%91%EB%8F%99%ED%95%98%EB%8A%94%EA%B0%80-a-name48a\">48. <code class=\"language-text\">Set</code> 객체는 무엇이며 어떻게 작동하는가? <a name=\"48\"></a></a></li>\n<li><a href=\"#49-%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name49a\">49. 콜백 함수란 무엇인가? <a name=\"49\"></a></a></li>\n<li><a href=\"#50-%ED%94%84%EB%A1%9C%EB%AF%B8%EC%8A%A4smallpromisessmall-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name50a\">50. <strong>프로미스<small>(Promises)</small></strong> 란 무엇인가? <a name=\"50\"></a></a></li>\n<li><a href=\"#51-asyncawait%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%9E%91%EB%8F%99%ED%95%98%EB%8A%94%EA%B0%80-a-name51a\">51. <em>async/await</em>란 무엇이며 어떻게 작동하는가? <a name=\"51\"></a></a></li>\n<li><a href=\"#52-%EC%8A%A4%ED%94%84%EB%A0%88%EB%93%9C-%EC%97%B0%EC%82%B0%EC%9E%90smallspread-operatorsmall-%EC%99%80-%EB%82%98%EB%A8%B8%EC%A7%80-%EC%97%B0%EC%82%B0%EC%9E%90smallrest-operatorsmall-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name52a\">52. <strong>스프레드 연산자<small>(Spread operator)</small></strong> 와 <strong>나머지 연산자<small>(Rest operator)</small></strong> 의 차이점은 무엇인가? <a name=\"52\"></a></a></li>\n<li><a href=\"#53-%EA%B8%B0%EB%B3%B8-%EB%A7%A4%EA%B0%9C-%EB%B3%80%EC%88%98smalldefault-parameterssmall-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name53a\">53. <strong>기본 매개 변수<small>(Default Parameters)</small></strong> 란 무엇인가? <a name=\"53\"></a></a></li>\n<li><a href=\"#54-%EB%9E%98%ED%8D%BC-%EA%B0%9D%EC%B2%B4smallwrapper-objectssmall-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name54a\">54. <strong>래퍼 객체<small>(Wrapper Objects)</small></strong> 란 무엇인가? <a name=\"54\"></a></a></li>\n</ul>"}},{"node":{"excerpt":"출처 70 JavaScript Interview Questions 시작하며 글이 긴 관계로 4부로 나눠서 진행하며 1부는 1-17번 질문, 2부는 18-36번, 3부는 37-54번, 4부는 55-70번 질문으로 구성되어 있다. 7…","fields":{"slug":"/blog/2020/70-JavaScript-Interview-Questions-2/"},"frontmatter":{"date":"15 January, 2020","title":"70 자바스크립트 인터뷰 질문 - 2부(번역)","description":"70 JavaScript Interview Questions","tags":["javascript","interview","translation"]},"tableOfContents":"<ul>\n<li><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></li>\n<li><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EB%A9%B0\">시작하며</a></li>\n<li><a href=\"#hi-guys-good-day-and-a-happy-new-year-\">Hi Guys Good Day and a Happy New Year 🎆🎆🎆!</a></li>\n<li><a href=\"#%EC%A7%88%EB%AC%B8-a-name0a\">질문 <a name=\"0\"></a></a></li>\n<li><a href=\"#18-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85smallhoistingsmall%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name18a\">18. 호이스팅<small>(Hoisting)</small>이란 무엇인가? <a name=\"18\"></a></a></li>\n<li><a href=\"#19-%EC%8A%A4%EC%BD%94%ED%94%84smallscopesmall%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name19a\">19. 스코프<small>(Scope)</small>란 무엇인가? <a name=\"19\"></a></a></li>\n<li><a href=\"#20-%ED%81%B4%EB%A1%9C%EC%A0%80smallclosuressmall%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name20a\">20. 클로저<small>(Closures)</small>란 무엇인가? <a name=\"20\"></a></a></li>\n<li><a href=\"#21-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-falsy%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name21a\">21. <strong>자바스크립트</strong>에서 <strong>falsy</strong>란 무엇인가? <a name=\"21\"></a></a></li>\n<li><a href=\"#22-falsy%EA%B0%92%EC%9D%84-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%99%95%EC%9D%B8%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94%EA%B0%80-a-name22a\">22. <strong>falsy</strong>값을 어떻게 확인할 수 있는가? <a name=\"22\"></a></a></li>\n<li><a href=\"#23-use-strict%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%84-%ED%95%98%EB%8A%94%EA%B0%80-a-name23a\">23. <code class=\"language-text\">use strict</code>은 무엇을 하는가? <a name=\"23\"></a></a></li>\n<li><a href=\"#24-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-this-%EA%B0%92%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name24a\">24. 자바스크립트에서 <code class=\"language-text\">this</code> 값은 무엇인가? <a name=\"24\"></a></a></li>\n<li><a href=\"#25-%EA%B0%9D%EC%B2%B4%EC%9D%98-prototype%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name25a\">25. 객체의 prototype은 무엇인가? <a name=\"25\"></a></a></li>\n<li><a href=\"#26-iife%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EA%B7%B8-%EC%82%AC%EC%9A%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name26a\">26. IIFE는 무엇이며, 그 사용법은 무엇인가? <a name=\"26\"></a></a></li>\n<li><a href=\"#27-functionprototypeapply-%EC%82%AC%EC%9A%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name27a\">27. <code class=\"language-text\">Function.prototype.apply</code> 사용법은 무엇인가? <a name=\"27\"></a></a></li>\n<li><a href=\"#28-functionprototypecall-%EC%82%AC%EC%9A%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name28a\">28. <code class=\"language-text\">Function.prototype.call</code> 사용법은 무엇인가? <a name=\"28\"></a></a></li>\n<li><a href=\"#29-functionprototypeapply%EC%99%80-functionprototypecall%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name29a\">29. <code class=\"language-text\">Function.prototype.apply</code>와 <code class=\"language-text\">Function.prototype.call</code>의 차이점은 무엇인가? <a name=\"29\"></a></a></li>\n<li><a href=\"#30-functionprototypebind%EC%9D%98-%EC%82%AC%EC%9A%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name30a\">30. <code class=\"language-text\">Function.prototype.bind</code>의 사용법은 무엇인가? <a name=\"30\"></a></a></li>\n<li><a href=\"#31-%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8Dsmallfunctional-programmingsmall%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%ED%95%A8%EC%88%98%ED%98%95-%EC%96%B8%EC%96%B4smallfunctional-languagesmall%EB%A1%9C%EC%84%9C-%ED%9B%84%EB%B3%B4%EA%B0%80-%EB%90%98%EB%8A%94-javascript%EC%9D%98-%ED%8A%B9%EC%A7%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name31a\">31. **함수형 프로그래밍<small>(Functional Programming)</small>**이란 무엇이며, **함수형 언어<small>(functional language)</small>**로서 후보가 되는 <strong>JavaScript</strong>의 특징은 무엇인가? <a name=\"31\"></a></a></li>\n<li><a href=\"#32-%EA%B3%A0%EC%B0%A8-%ED%95%A8%EC%88%98smallhigher-order-functionssmall%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name32a\">32. **고차 함수<small>(Higher Order Functions)</small>**란 무엇인가? <a name=\"32\"></a></a></li>\n<li><a href=\"#33-%ED%95%A8%EC%88%98%EB%8A%94-%EC%99%9C-%EC%9D%BC%EA%B8%89-%EA%B0%9D%EC%B2%B4smallfirst-class-objectssmall%EB%9D%BC-%ED%95%98%EB%8A%94%EA%B0%80-a-name33a\">33. 함수는 왜 **일급 객체<small>(First-class Objects)</small>**라 하는가? <a name=\"33\"></a></a></li>\n<li><a href=\"#34-%EC%A7%81%EC%A0%91-arrayprototypemap-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EC%8B%9C%EC%98%A4-a-name34a\">34. 직접 <code class=\"language-text\">Array.prototype.map</code> 메서드를 구현하시오. <a name=\"34\"></a></a></li>\n<li><a href=\"#35-%EC%A7%81%EC%A0%91-arrayprototypefilter-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EC%8B%9C%EC%98%A4-a-name35a\">35. 직접 <code class=\"language-text\">Array.prototype.filter</code> 메서드를 구현하시오. <a name=\"35\"></a></a></li>\n<li><a href=\"#36-%EC%A7%81%EC%A0%91-arrayprototypereduce-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EC%8B%9C%EC%98%A4-a-name36a\">36. 직접 <code class=\"language-text\">Array.prototype.reduce</code> 메서드를 구현하시오. <a name=\"36\"></a></a></li>\n</ul>"}},{"node":{"excerpt":"출처 70 JavaScript Interview Questions 시작하며 글이 긴 관계로 4부로 나눠서 진행하며 1부는 1-17번 질문, 2부는 18-36번, 3부는 37-54번, 4부는 55-70번 질문으로 구성되어 있다. 7…","fields":{"slug":"/blog/2020/70-JavaScript-Interview-Questions-1/"},"frontmatter":{"date":"09 January, 2020","title":"70 자바스크립트 인터뷰 질문 - 1부(번역)","description":"70 JavaScript Interview Questions","tags":["javascript","interview","translation"]},"tableOfContents":"<ul>\n<li><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></li>\n<li><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EB%A9%B0\">시작하며</a></li>\n<li><a href=\"#hi-guys-good-day-and-a-happy-new-year-\">Hi Guys Good Day and a Happy New Year 🎆🎆🎆!</a></li>\n<li><a href=\"#%EC%A7%88%EB%AC%B8-a-name0a\">질문 <a name=\"0\"></a></a></li>\n<li><a href=\"#1-undefined%EC%99%80-null%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B4-%EB%8B%A4%EB%A5%B8%EA%B0%80-a-name1a\">1. <code class=\"language-text\">undefined</code>와 <code class=\"language-text\">null</code>은 무엇이 다른가? <a name=\"1\"></a></a></li>\n<li><a href=\"#2--%EC%97%B0%EC%82%B0%EC%9E%90%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%84-%ED%95%98%EB%8A%94%EA%B0%80-a-name2a\">2. <code class=\"language-text\">&amp;&amp;</code> 연산자는 무엇을 하는가? <a name=\"2\"></a></a></li>\n<li><a href=\"#3--%EC%97%B0%EC%82%B0%EC%9E%90%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%84-%ED%95%98%EB%8A%94%EA%B0%80-a-name3a\">3. <code class=\"language-text\">||</code> 연산자는 무엇을 하는가? <a name=\"3\"></a></a></li>\n<li><a href=\"#4-string%EC%9D%84-number%EB%A1%9C-%EB%B3%80%ED%99%98%ED%95%98%EB%8A%94-%EA%B0%80%EC%9E%A5-%EB%B9%A0%EB%A5%B8-%EB%B0%A9%EB%B2%95%EC%9D%80--%EB%98%90%EB%8A%94-%EB%8B%A8%ED%95%AD-%EB%8D%94%ED%95%98%EA%B8%B0-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%B8%EA%B0%80-a-name4a\">4. string을 number로 변환하는 가장 빠른 방법은 + 또는 단항 더하기 연산자를 사용하는 것인가? <a name=\"4\"></a></a></li>\n<li><a href=\"#5-dom-%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name5a\">5. DOM 이란 무엇인가? <a name=\"5\"></a></a></li>\n<li><a href=\"#6-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%A0%84%ED%8C%8Csmallevent-propagationsmall-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name6a\">6. 이벤트 전파<small>(Event Propagation)</small> 란 무엇인가? <a name=\"6\"></a></a></li>\n<li><a href=\"#7-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%B2%84%EB%B8%94%EB%A7%81smallevent-bubblingsmall-%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name7a\">7. 이벤트 버블링<small>(Event Bubbling)</small> 이란 무엇인가? <a name=\"7\"></a></a></li>\n<li><a href=\"#8-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%BA%A1%EC%B3%90%EB%A7%81smallevent-capturingsmall-%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name8a\">8. 이벤트 캡쳐링<small>(Event Capturing)</small> 이란 무엇인가? <a name=\"8\"></a></a></li>\n<li><a href=\"#9-eventpreventdefault%EC%99%80-eventstoppropagation-%EB%A9%94%EC%84%9C%EB%93%9C%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name9a\">9. <code class=\"language-text\">event.preventDefault()</code>와 <code class=\"language-text\">event.stopPropagation()</code> 메서드의 차이점은 무엇인가? <a name=\"9\"></a></a></li>\n<li><a href=\"#10-eventpreventdefault-%EB%A9%94%EC%84%9C%EB%93%9C%EA%B0%80-element%EC%97%90-%EC%82%AC%EC%9A%A9%EB%90%98%EC%97%88%EB%8A%94%EC%A7%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94%EA%B0%80-a-name10a\">10. <code class=\"language-text\">event.preventDefault()</code> 메서드가 element에 사용되었는지 어떻게 확인하는가? <a name=\"10\"></a></a></li>\n<li><a href=\"#11-%EC%9D%B4-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-objsomepropx%EA%B0%80-%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name11a\">11. 이 코드에서 <code class=\"language-text\">obj.someprop.x</code>가 에러 발생하는 이유는 무엇인가? <a name=\"11\"></a></a></li>\n<li><a href=\"#12-eventtarget-%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name12a\">12. <strong>event.target</strong> 이란 무엇인가? <a name=\"12\"></a></a></li>\n<li><a href=\"#13-eventcurrenttarget-%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name13a\">13. <strong>event.currentTarget</strong> 이란 무엇인가? <a name=\"13\"></a></a></li>\n<li><a href=\"#14--%EC%99%80--%EC%9D%98-%EC%B0%A8%EC%9D%B4%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name14a\">14. <code class=\"language-text\">==</code> 와 <code class=\"language-text\">===</code> 의 차이는 무엇인가? <a name=\"14\"></a></a></li>\n<li><a href=\"#15-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-%EB%B9%84%EC%8A%B7%ED%95%9C-%EB%91%90-%EA%B0%9D%EC%B2%B4%EB%A5%BC-%EB%B9%84%EA%B5%90%ED%95%A0%EB%95%8C-false%EB%A5%BC-%EB%A6%AC%ED%84%B4%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name15a\">15. 자바스크립트에서 비슷한 두 객체를 비교할때 <strong>false</strong>를 리턴하는 이유는 무엇인가? <a name=\"15\"></a></a></li>\n<li><a href=\"#16--%EC%97%B0%EC%82%B0%EC%9E%90%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%84-%ED%95%98%EB%8A%94%EA%B0%80-a-name16a\">16. <code class=\"language-text\">!!</code> 연산자는 무엇을 하는가? <a name=\"16\"></a></a></li>\n<li><a href=\"#17-%ED%95%9C-%EC%A4%84%EC%97%90-%EC%97%AC%EB%9F%AC-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%84-%ED%8F%89%EA%B0%80%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name17a\">17. 한 줄에 여러 표현식을 평가하는 방법은 무엇인가? <a name=\"17\"></a></a></li>\n</ul>"}},{"node":{"excerpt":"출처 Golang for JavaScript developers - Part 2 시작 만약 당신이 다른 프로그래밍 언어를 배우는 것에 대해 생각하고 있는 Javascript 개발자라면, Golang…","fields":{"slug":"/blog/2019/Golang-for-JavaScript-developers-2/"},"frontmatter":{"date":"13 December, 2019","title":"JavaScript 개발자를 위한 Golang - 2부(번역)","description":"Golang for JavaScript developers - Part 2","tags":["javascript","go","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%8B%9C%EC%9E%91\">시작</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8D%94-%EB%8B%A4%EB%A5%B8-%EA%B2%83%EB%93%A4\">더 다른 것들</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%83%80%EC%9E%85--%EB%B3%80%EC%88%98smalltypes--variablessmall\">타입 &#x26; 변수<small>(Types &#x26; Variables)</small></a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#javascript\">JavaScript</a></li>\n<li><a href=\"#go\">Go</a></li>\n<li><a href=\"#%EC%9C%A0%EC%82%AC%EC%A0%90\">유사점</a></li>\n<li><a href=\"#%EC%B0%A8%EC%9D%B4%EC%A0%90\">차이점</a></li>\n<li><a href=\"#javascript-1\">JavaScript</a></li>\n<li><a href=\"#go-1\">Go</a></li>\n<li><a href=\"#javascript-2\">Javascript</a></li>\n<li><a href=\"#go-2\">Go</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B0%80%EB%B3%80%EC%84%B1smallmutabilitysmall\">가변성<small>(Mutability)</small></a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#javascript-3\">JavaScript</a></li>\n<li><a href=\"#go-3\">Go</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%97%90%EB%9F%AC-%EC%B2%98%EB%A6%ACsmallerror-handlingsmall\">에러 처리<small>(Error handling)</small></a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#javascript-4\">JavaScript</a></li>\n<li><a href=\"#go-4\">Go</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%83%81%EC%86%8D-%EB%8C%80%EC%8B%A0-%ED%95%A9%EC%84%B1smallcomposition-instead-of-inheritancesmall\">상속 대신 합성<small>(Composition instead of inheritance)</small></a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#javascript-5\">JavaScript</a></li>\n<li><a href=\"#go-5\">Go</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%8F%99%EC%8B%9C%EC%84%B1smallconcurrencysmall\">동시성<small>(Concurrency)</small></a></p>\n</li>\n<li>\n<p><a href=\"#%EC%BB%B4%ED%8C%8C%EC%9D%BCsmallcompilationsmall\">컴파일<small>(Compilation)</small></a></p>\n</li>\n<li>\n<p><a href=\"#%ED%8C%A8%EB%9F%AC%EB%8B%A4%EC%9E%84\">패러다임</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EC%A1%B0\">참조:</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"출처 Golang for JavaScript developers - Part 1 시작 만약 당신이 다른 프로그래밍 언어를 배우는 것에 대해 생각하고 있는 Javascript 개발자라면, Golang…","fields":{"slug":"/blog/2019/Golang-for-JavaScript-developers-1/"},"frontmatter":{"date":"11 December, 2019","title":"JavaScript 개발자를 위한 Golang - 1부(번역)","description":"Golang for JavaScript developers - Part 1","tags":["javascript","go","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%8B%9C%EC%9E%91\">시작</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8D%94-%EC%9C%A0%EC%82%AC%ED%95%9C-%EA%B2%83%EB%93%A4\">더 유사한 것들</a></p>\n</li>\n<li>\n<p><a href=\"#functions\">Functions</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%9C%A0%EC%82%AC%EC%A0%90\">유사점</a></li>\n<li><a href=\"#javascript\">Javascript</a></li>\n<li><a href=\"#go\">Go</a></li>\n<li><a href=\"#%EC%B0%A8%EC%9D%B4%EC%A0%90\">차이점</a></li>\n<li><a href=\"#javascript-1\">Javascript</a></li>\n<li><a href=\"#go-1\">Go</a></li>\n<li><a href=\"#javascript-2\">Javascript</a></li>\n<li><a href=\"#go-2\">Go</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%8A%A4%EC%BD%94%ED%94%84\">스코프</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%9C%A0%EC%82%AC%EC%A0%90-1\">유사점</a></li>\n<li><a href=\"#%EC%B0%A8%EC%9D%B4%EC%A0%90-1\">차이점</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%9D%90%EB%A6%84-%EC%A0%9C%EC%96%B4smallflow-controlsmall\">흐름 제어<small>(Flow control)</small></a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%9C%A0%EC%82%AC%EC%A0%90-2\">유사점</a></li>\n<li><a href=\"#javascript-3\">JavaScript</a></li>\n<li><a href=\"#go-3\">Go</a></li>\n<li><a href=\"#%EC%B0%A8%EC%9D%B4%EC%A0%90-2\">차이점</a></li>\n<li><a href=\"#go-4\">Go</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC\">메모리 관리</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%9C%A0%EC%82%AC%EC%A0%90-3\">유사점</a></li>\n<li><a href=\"#%EC%B0%A8%EC%9D%B4%EC%A0%90-3\">차이점</a></li>\n<li><a href=\"#misc\">Misc</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EC%A1%B0\">참조:</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></p>\n</li>\n</ul>"}}]}},"pageContext":{"tag":"translation"}},"staticQueryHashes":["1137390604","3980716358"]}