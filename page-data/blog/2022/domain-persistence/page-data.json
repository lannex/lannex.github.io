{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/2022/domain-persistence/","result":{"data":{"site":{"siteMetadata":{"title":"lannex"}},"markdownRemark":{"id":"cfaf9e4b-b5ac-5690-bc48-a0de17b2879d","excerpt":"자랑은 아니지만 여러 회사를 돌아다녀 보니, 도메인 모델과 퍼시스턴스 모델이 같다고 생각하는 개발자들이 의외로 제법 있다. 추정컨대 데이터베이스 중심으로 사고를 하다 보니 그렇게 오해하는 게 아닌가 싶다. 정론을 얘기하자면, DDD…","html":"<p>자랑은 아니지만 여러 회사를 돌아다녀 보니, 도메인 모델과 퍼시스턴스 모델이 같다고 생각하는 개발자들이 의외로 제법 있다. 추정컨대 데이터베이스 중심으로 사고를 하다 보니 그렇게 오해하는 게 아닌가 싶다.</p>\n<p>정론을 얘기하자면, DDD에서 도메인은 반드시 순수해야 한다. 이 말은 도메인은 아무것도 의존해선 안 된다는 것이다. 도메인에 레파지토리의 어노테이션이 선언되는 순간 도메인은 오염된다.</p>\n<p>그래서 도메인 모델과 퍼시스턴스 모델은 분리해야 한다. <del>(어디까지나 정론)</del></p>\n<blockquote>\n<p>In conclusion, repeat after me: the Domain Model is NOT the same as the Persistence Model. Each serve a different layer with different responsibilities.</p>\n<p><a href=\"https://blog.sapiensworks.com/post/2012/04/07/Just-Stop-It!-The-Domain-Model-Is-Not-The-Persistence-Model.aspx\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">🔗 Just Stop It! The Domain Model Is Not The Persistence Model</a></p>\n</blockquote>\n<p>그렇지만 실제 개발이 항상 이상적으로 흘러가진 않기에 익숙하지 않다면 보통은 처음부터 두 모델을 결합하여 개발한다. 그 이윤,</p>\n<ol>\n<li>\n<p>당연하게도 도메인 모델과 퍼시스턴스 모델을 분리해서 개발하면 비용이 더 많이 든다. 두 가지의 모델을 모두 만들어야 하며 또 두 모델 사이를 매핑하는 매퍼를 만들고 지속적으로 관리해야 한다. (ORM 사용 시)</p>\n</li>\n<li>\n<p>도메인 모델과 퍼시스턴스 모델이 일치하는 상황이 존재하며, 초기 개발에 속도를 내야 할 상황도 있다. 그럴 땐 개발 편의를 위해 사용한다.</p>\n</li>\n</ol>\n<p>그런데 두 모델을 결합하여 개발하다 보면, 처음에는 문제가 없겠지만 시간이 지남에 따라 도메인이 점점 고도화되고 발전하면서 두 모델 간의 불일치가 드러나기 시작한다.\n가령, 테이블을 다시 설계하거나 성능 문제로 정규화 혹은 비정규화 과정을 거치거나 극단적으로 ORM이나 데이터베이스를 바꾸거나 하는 등 결국엔 분리할 수밖에 없는 상황에 직면하게 된다.</p>\n<p>시작을 어떻게 할지는 프로젝트 규모나 속도, 비용 등을 따져봐야겠지만 헷갈리거나 익숙지 않을 때는 두 모델을 결합하되, 이후 고도화에 맞춰 차차 분리하도록 하자.</p>","frontmatter":{"title":"도메인 모델과 퍼시스턴스 모델 분리","date":"2022-07-24","description":"Domain Model과 Persistence Model 결합과 분리","tags":["domain","persistence","ddd","clean-architecture"]}}},"pageContext":{"slug":"/blog/2022/domain-persistence/","previous":{"fields":{"slug":"/blog/2022/the-nature-of-software-development/"},"frontmatter":{"title":"The Nature of Software Development","tags":["book","agile"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%A0%95%EB%A6%AC\">정리</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%B3%B8%EC%A7%88%EC%A0%81-%EB%B0%A9%EB%B2%95\">본질적 방법</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B0%80%EC%B9%98\">가치</a></p>\n<ul>\n<li><a href=\"#%ED%94%BC%EC%B2%98-%EB%8B%A8%EC%9C%84-%EA%B0%9C%EB%B0%9C%EC%9D%98-%EC%9D%B4%EC%A0%90\">피처 단위 개발의 이점</a></li>\n<li><a href=\"#%EC%A1%B0%EC%A7%81-%EA%B5%AC%EC%84%B1\">조직 구성</a></li>\n<li><a href=\"#%EA%B3%84%ED%9A%8D\">계획</a></li>\n<li><a href=\"#%EA%B0%9C%EB%B0%9C\">개발</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A1%B0%EC%96%B8\">조언</a></p>\n<ul>\n<li><a href=\"#%EC%84%B1%EC%9E%A5%ED%95%98%EB%8A%94-%EA%B0%9C%EB%B0%9C%ED%8C%80\">성장하는 개발팀</a></li>\n<li><a href=\"#%EC%95%95%EB%B0%95\">압박</a></li>\n<li><a href=\"#%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81\">리팩토링</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%9B%84%EA%B8%B0\">후기</a></p>\n</li>\n</ul>"},"next":{"fields":{"slug":"/blog/2022/ddd-hexagonal-onion-clean-cqrs/"},"frontmatter":{"title":"DDD, Hexagonal, Onion, Clean, CQRS, ... 모두 종합한 방법","tags":["ddd","hexagonal","onion","cqrs","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%EA%B8%B0%EC%B4%88-%EB%B8%94%EB%A1%9D\">시스템의 기초 블록</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8F%84%EA%B5%AC\">도구</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8F%84%EA%B5%AC-%EB%B0%8F-%EC%A0%84%EB%8B%AC-%EB%A9%94%EC%BB%A4%EB%8B%88%EC%A6%98%EC%9D%84-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BD%94%EC%96%B4%EC%99%80-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0\">도구 및 전달 메커니즘을 애플리케이션 코어와 연결하기</a></p>\n<ul>\n<li><a href=\"#%ED%8F%AC%ED%8A%B8ports\">포트(Ports)</a></li>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%96%B4%EB%8C%91%ED%84%B0primary-%EB%98%90%EB%8A%94-driving-adapters\">기본 어댑터(Primary 또는 Driving Adapters)</a></li>\n<li><a href=\"#%EB%B3%B4%EC%A1%B0-%EC%96%B4%EB%8C%91%ED%84%B0secondary-%EB%98%90%EB%8A%94-driven-adapters\">보조 어댑터(Secondary 또는 Driven Adapters)</a></li>\n<li><a href=\"#%EC%A0%9C%EC%96%B4%EC%9D%98-%EC%97%AD%EC%A0%84inversion-of-control\">제어의 역전(Inversion of Control)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BD%94%EC%96%B4%EC%9D%98-%EC%A1%B0%EC%A7%81%ED%99%94application-core-organisation\">애플리케이션 코어의 조직화(Application Core Organisation)</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EA%B3%84%EC%B8%B5application-layer\">애플리케이션 계층(Application Layer)</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8F%84%EB%A9%94%EC%9D%B8-%EA%B3%84%EC%B8%B5domain-layer\">도메인 계층(Domain Layer)</a></p>\n<ul>\n<li><a href=\"#%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%84%9C%EB%B9%84%EC%8A%A4domain-services\">도메인 서비스(Domain Services)</a></li>\n<li><a href=\"#%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%AA%A8%EB%8D%B8domain-model\">도메인 모델(Domain Model)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8components\">컴포넌트(Components)</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B0%84%EC%9D%98-%EA%B2%B0%ED%95%A9%EB%8F%84-%EB%82%AE%EC%B6%94%EA%B8%B0decoupling-the-components\">컴포넌트 간의 결합도 낮추기(Decoupling the components)</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%9D%98-%EB%A1%9C%EC%A7%81%EC%9D%84-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0triggering-logic-in-other-components\">다른 컴포넌트의 로직을 실행하기(Triggering logic in other components)</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%96%BB%EA%B8%B0getting-data-from-other-components\">다른 컴포넌트의 데이터 얻기(Getting data from other components)</a></p>\n<ul>\n<li><a href=\"#%EA%B3%B5%EC%9C%A0%EB%90%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%80%EC%9E%A5%EC%86%8Cdata-storage-shared-between-components\">공유된 데이터 저장소(Data storage shared between components)</a></li>\n<li><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%B3%84%EB%A1%9C-%EB%B6%84%EB%A6%AC%EB%90%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%80%EC%9E%A5%EC%86%8Cdata-storage-segregated-per-component\">컴포넌트별로 분리된 데이터 저장소(Data storage segregated per component)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A0%9C%EC%96%B4-%ED%9D%90%EB%A6%84flow-of-control\">제어 흐름(Flow of control)</a></p>\n<ul>\n<li><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C%EC%BF%BC%EB%A6%AC-%EB%B2%84%EC%8A%A4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EC%9D%84-%EB%95%8Cwithout-a-commandquery-bus\">커맨드/쿼리 버스를 사용하지 않을 때(Without a Command/Query Bus)</a></li>\n<li><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C%EC%BF%BC%EB%A6%AC-%EB%B2%84%EC%8A%A4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%A0-%EB%95%8Cwith-a-commandquery-bus\">커맨드/쿼리 버스를 사용할 때(With a Command/Query Bus)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0conclusion\">결론(Conclusion)</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}}},"staticQueryHashes":["253152893","3980716358"],"slicesMap":{}}