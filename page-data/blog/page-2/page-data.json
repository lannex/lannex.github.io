{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/blog/page-2/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"excerpt":"Ecma International approves new standards 6월, ES2021 정식 릴리즈 소식이 들려왔다.\n스펙은 이미 알려져 있었으나 승인 시점에 글을 작성해보고자 하여 이제야 정리해 본다. 숫자 구분 기호 Numeric…","fields":{"slug":"/blog/2021/es2021/"},"frontmatter":{"date":"27 June, 2021","title":"ES2021에 추가된 새로운 기능","description":"자바스크립트 ES2021 변경점 살펴보기","tags":["javascript"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%88%AB%EC%9E%90-%EA%B5%AC%EB%B6%84-%EA%B8%B0%ED%98%B8-smallnumeric-separatorsmall\">숫자 구분 기호 <small>Numeric separator</small></a></p>\n</li>\n<li>\n<p><a href=\"#promiseany\">Promise.any</a></p>\n</li>\n<li>\n<p><a href=\"#weakrefs%EC%99%80-finalizers\">WeakRefs와 Finalizers</a></p>\n</li>\n<li>\n<p><a href=\"#stringprototypereplaceall\">String.prototype.replaceAll</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%85%BC%EB%A6%AC-%ED%95%A0%EB%8B%B9-%EC%97%B0%EC%82%B0%EC%9E%90-smalllogical-assignmentsmall\">논리 할당 연산자 <small>Logical assignment</small></a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#logical-nullish\">Logical Nullish</a></li>\n<li><a href=\"#logical-or\">Logical OR</a></li>\n<li><a href=\"#logical-and\">Logical AND</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"시작하기에 앞서 Fabric이라는 서비스에서 운영하는 블로그 글로 이커머스 데이터 모델을 구축할 때 생각해볼 만한 내용이라 허락받고 번역합니다. 기본적으로 API-first…","fields":{"slug":"/blog/2021/building-a-scalable-e-commerce-data-model/"},"frontmatter":{"date":"17 January, 2021","title":"확장 가능한 이커머스 데이터 모델 구축","description":"[번역] Building a Scalable E-Commerce Data Model","tags":["database","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\">시작하기에 앞서</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9D%B4%EC%BB%A4%EB%A8%B8%EC%8A%A4-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8\">이커머스 데이터 모델</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B3%A0%EA%B0%9D%EC%9D%80-%EB%88%84%EA%B5%AC%EC%9E%85%EB%8B%88%EA%B9%8C\">고객은 누구입니까?</a></p>\n<ul>\n<li><a href=\"#%EA%B9%8A%EC%9D%B4-%EC%9E%88%EA%B2%8C-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-addresses\">깊이 있게 들어가기: Addresses</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A0%9C%ED%92%88%EA%B3%BC-%EC%B9%B4%ED%83%88%EB%A1%9C%EA%B7%B8%EB%A5%BC-%EA%B5%AC%EC%84%B1%ED%95%A9%EB%8B%88%EA%B9%8C\">어떻게 제품과 카탈로그를 구성합니까?</a></p>\n<ul>\n<li><a href=\"#%EA%B9%8A%EC%9D%B4-%EC%9E%88%EA%B2%8C-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-pricing\">깊이 있게 들어가기: Pricing</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A3%BC%EB%AC%B8%EC%9D%84-%EA%B0%84%EC%86%8C%ED%99%94%ED%95%A9%EB%8B%88%EA%B9%8C\">어떻게 주문을 간소화합니까?</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8B%A4%EB%A5%B8-%EB%B0%A9%EB%B2%95-fabric\">다른 방법 (Fabric)</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"소개 Rust는 garbage-collector…","fields":{"slug":"/blog/2021/why-rust-is-a-modern-programming-language/"},"frontmatter":{"date":"01 January, 2021","title":"Rust가 '현대적인' 프로그래밍 언어인 이유","description":"[번역] Why Rust is a 'modern' programming language","tags":["rust","translation"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%86%8C%EA%B0%9C\">소개</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%98%84%EB%8C%80%EC%A0%81%EC%9D%B8%EC%9D%B4-%EB%AC%B4%EC%8A%A8-%EB%9C%BB%EC%9E%85%EB%8B%88%EA%B9%8C\">“현대적인”이 무슨 뜻입니까?</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A0%95%EC%A0%81-%ED%83%80%EC%9E%85\">정적 타입</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%95%88%EC%A0%84%EC%84%B1\">메모리 안전성</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%98%84%EB%8C%80%EC%A0%81%EC%9D%B8\">“현대적인”</a></p>\n<ul>\n<li><a href=\"#%EB%B9%84%EA%B5%AC%EC%A1%B0%ED%99%94-destructuring\">비구조화 (Destructuring)</a></li>\n<li><a href=\"#%ED%8C%A8%ED%84%B4-%EB%A7%A4%EC%B9%AD-pattern-matching\">패턴 매칭 (Pattern matching)</a></li>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%B6%88%EB%B3%80%EC%84%B1--%EC%84%80%EB%8F%84%EC%9E%89-immutability-by-default--shadowing\">기본적으로 불변성 &#x26; 섀도잉 (Immutability by default &#x26; shadowing)</a></li>\n<li><a href=\"#no-null\">No null!</a></li>\n<li><a href=\"#%EC%9D%BC%EA%B8%89-%EC%97%B4%EA%B1%B0%ED%98%95enum-%EC%A7%80%EC%9B%90\">일급 열거형(Enum) 지원</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%8A%B9%EC%84%B1-traits\">특성 (Traits)</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"현재 사내에서는 컨테이너 오케스트레이션 툴로 Docker Swarm을 사용하고 있습니다. Kubernetes 전환 얘기가 솔솔 나오는 와중에 새로운 프로덕트를 내놓게 되었는데 이 과정에서 EFK를 사용하여 Logging…","fields":{"slug":"/blog/2020/EFK-Fluentd-Fluentbit/"},"frontmatter":{"date":"15 December, 2020","title":"EFK Stack, 그 중에 Fluentd와 Fluent Bit","description":"EFK Stack으로 Docker Swarm Logging 구축","tags":["devops"]},"tableOfContents":"<ul>\n<li><a href=\"#-elk%EC%99%80-efk-stack\">👀 ELK와 EFK Stack?</a></li>\n<li><a href=\"#-architecture\">📐 Architecture</a></li>\n<li><a href=\"#-fluent-bit%EA%B3%BC-fluentd\">🤲 Fluent Bit과 Fluentd</a></li>\n<li><a href=\"#-input--parser--filter--output\">👉 Input → Parser → Filter → Output</a></li>\n<li><a href=\"#-forwarder-fluent-bit\">🚢 Forwarder (Fluent Bit)</a></li>\n<li><a href=\"#-aggregator-fluentd\">🗃 Aggregator (Fluentd)</a></li>\n<li><a href=\"#-elasticsearch%EC%99%80-kibana\">📊 Elasticsearch와 Kibana</a></li>\n<li><a href=\"#-%EB%81%9D%EC%9C%BC%EB%A1%9C\">📃 끝으로</a></li>\n</ul>"}},{"node":{"excerpt":"Github Actions은 Github 내부에서 CI/CD를 쉽게 만들어 사용할 수 있는 막강한 기능입니다. 현재 사내에서 사용하는 저장소가 Gitlab이라 Gitlab CI/CD는 많이 사용하나 Github Actions…","fields":{"slug":"/blog/2020/github-action/"},"frontmatter":{"date":"29 November, 2020","title":"Github Actions로 간단한 Azure Static Web Page 배포","description":"쉽고 편한 Github Actions","tags":["devops","azure"]},"tableOfContents":"<ul>\n<li><a href=\"#-github-actions%EC%9D%B4%EB%9E%80\">🤔 Github Actions이란?</a></li>\n<li><a href=\"#-%EB%B9%A0%EB%A5%B8-%EC%8B%9C%EC%9E%91\">🚀 빠른 시작</a></li>\n<li><a href=\"#%EF%B8%8F-yml-%EC%9E%91%EC%84%B1\">✏️ yml 작성</a></li>\n<li><a href=\"#-%EB%A7%88%EC%BC%93-%ED%94%8C%EB%A0%88%EC%9D%B4%EC%8A%A4\">📦 마켓 플레이스</a></li>\n<li><a href=\"#%EF%B8%8F-azure-action\">☁️ Azure Action</a></li>\n<li><a href=\"#%EF%B8%8F-%ED%99%95%EC%9D%B8\">✔️ 확인</a></li>\n<li><a href=\"#-%EB%81%9D%EC%9C%BC%EB%A1%9C\">💭 끝으로</a></li>\n</ul>"}},{"node":{"excerpt":"…","fields":{"slug":"/blog/2020/abem/"},"frontmatter":{"date":"20 November, 2020","title":"Atomic Design과 BEM (ABEM)","description":"ABEM = Atomic Design + BEM","tags":["javascript","react"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%99%9C-%EC%A4%91%EC%9A%94%ED%95%A0%EA%B9%8C\">왜 중요할까?</a></p>\n</li>\n<li>\n<p><a href=\"#atomic-design\">Atomic Design</a></p>\n<ul>\n<li><a href=\"#atoms-%EC%9B%90%EC%9E%90\">Atoms (원자)</a></li>\n<li><a href=\"#molecules-%EB%B6%84%EC%9E%90\">Molecules (분자)</a></li>\n<li><a href=\"#organisms-%EC%9C%A0%EA%B8%B0%EC%B2%B4\">Organisms (유기체)</a></li>\n<li><a href=\"#templates-%ED%85%9C%ED%94%8C%EB%A6%BF\">Templates (템플릿)</a></li>\n<li><a href=\"#pages-%ED%8E%98%EC%9D%B4%EC%A7%80\">Pages (페이지)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#bem\">BEM</a></p>\n<ul>\n<li><a href=\"#block\">Block</a></li>\n<li><a href=\"#element\">Element</a></li>\n<li><a href=\"#modifier\">Modifier</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#abem\">ABEM</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A0%95%EB%A6%AC\">정리</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C\">참고 자료</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"여러 가지 일로 바빴던 터라 오랜만에 글을 씁니다.\n무엇을 쓸까 고민하다가 올 초에 ES2020이 발표되고 언제 한번 모아서 정리 혹은 공부할 겸 쓰려 했었는데 이제야 하게 되네요. ES2015(ES…","fields":{"slug":"/blog/2020/es2016-es2020/"},"frontmatter":{"date":"20 September, 2020","title":"ES2016에서 ES2020까지 추가된 기능들","description":"알아두면 도움되는 ES2016 ~ ES2020 기능들","tags":["javascript"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#es2016\">ES2016</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#arrayprototypeincludes\">Array.prototype.includes()</a></li>\n<li><a href=\"#exponentiation-operator\">Exponentiation Operator</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#es2017\">ES2017</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#asyncawait-functions\">Async/Await Functions</a></li>\n<li><a href=\"#stringprototypepadstart-stringprototypepadend\">String.prototype.padStart(), String.prototype.padEnd()</a></li>\n<li><a href=\"#objectvalues\">Object.values()</a></li>\n<li><a href=\"#objectentries\">Object.entries()</a></li>\n<li><a href=\"#objectgetownpropertydescriptors\">Object.getOwnPropertyDescriptors()</a></li>\n<li><a href=\"#trailing-commas\">Trailing Commas</a></li>\n<li><a href=\"#sharedarraybuffer\">SharedArrayBuffer</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#es2018\">ES2018</a></p>\n<ul>\n<li>\n<ul>\n<li>\n<p><a href=\"#object-restspread-properties\">Object Rest/Spread Properties</a></p>\n</li>\n<li>\n<p><a href=\"#asynchronous-iteration\">Asynchronous Iteration</a></p>\n</li>\n<li>\n<p><a href=\"#promiseprototypefinally\">Promise.prototype.finally()</a></p>\n</li>\n<li>\n<p><a href=\"#regexp-features\">RegExp Features</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#lookbehind-assertions\">Lookbehind Assertions</a></li>\n<li><a href=\"#code-classlanguage-textscode-flag\"><code class=\"language-text\">s</code> Flag</a></li>\n<li><a href=\"#unicode-property-escapes-code-classlanguage-textpcode-and-code-classlanguage-textpcode\">Unicode Property Escapes <code class=\"language-text\">\\p{...}</code> and <code class=\"language-text\">\\P{...}</code></a></li>\n<li><a href=\"#named-capturing-groups\">Named Capturing Groups</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#es2019\">ES2019</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#arrayprototypeflat-arrayprototypeflatmap\">Array.prototype.flat(), Array.prototype.flatMap()</a></li>\n<li><a href=\"#objectfromentries\">Object.fromEntries()</a></li>\n<li><a href=\"#stringprototypetrimstart-stringprototypetrimend\">String.prototype.trimStart(), String.prototype.trimEnd()</a></li>\n<li><a href=\"#symbolprototypedescription\">Symbol.prototype.description</a></li>\n<li><a href=\"#optional-catch-binding\">Optional Catch Binding</a></li>\n<li><a href=\"#functionprototypetostring\">Function.prototype.toString()</a></li>\n<li><a href=\"#json-%EA%B0%9C%EC%84%A0\">JSON 개선</a></li>\n<li><a href=\"#jsonstringify-%EA%B0%9C%EC%84%A0\">JSON.stringify() 개선</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#es2020\">ES2020</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#bigint\">BigInt</a></li>\n<li><a href=\"#dynamic-import\">Dynamic Import</a></li>\n<li><a href=\"#globalthis\">globalThis</a></li>\n<li><a href=\"#stringprototypematchall\">String.prototype.matchAll()</a></li>\n<li><a href=\"#promiseallsettled\">Promise.allSettled()</a></li>\n<li><a href=\"#nullish-coalescing\">Nullish Coalescing</a></li>\n<li><a href=\"#optional-chaining\">Optional Chaining</a></li>\n<li><a href=\"#module-namespace-exports\">Module Namespace Exports</a></li>\n<li><a href=\"#importmeta\">import.meta</a></li>\n<li><a href=\"#for-in-%EA%B0%9C%EC%84%A0\">for-in 개선</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>"}},{"node":{"excerpt":"시작 새로운 프로젝트를 시작할 때 언제나 어떤 상태 관리 라이브러리를 사용할지 고민에 빠지게 됩니다.\n상태 관리를 React 자체적으로 처리 할 수 있는 Context가 존재하지만 대규모 프로젝트에서는 여전히 Redux나 Mobx…","fields":{"slug":"/blog/2020/redux-mobx/"},"frontmatter":{"date":"06 March, 2020","title":"Redux와 Mobx 어떤 것을 쓸까?","description":"Redux vs Mobx","tags":["javascript","react"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%8B%9C%EC%9E%91\">시작</a></p>\n</li>\n<li>\n<p><a href=\"#redux\">Redux</a></p>\n</li>\n<li>\n<p><a href=\"#mobx\">Mobx</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9D%B8%EA%B8%B0\">인기</a></p>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li><a href=\"#redux-1\">Redux</a></li>\n<li><a href=\"#mobx-1\">Mobx</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%83%81%ED%83%9C\">상태</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B6%88%EB%B3%80%EC%84%B1-%EA%B0%80%EB%B3%80%EC%84%B1\">불변성, 가변성</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%95%99%EC%8A%B5\">학습</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B6%94%EA%B0%80-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\">추가 라이브러리</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></p>\n</li>\n</ul>"}},{"node":{"excerpt":"출처 70 JavaScript Interview Questions 시작하며 글이 긴 관계로 4부로 나눠서 진행하며 1부는 1-17번 질문, 2부는 18-36번, 3부는 37-54번, 4부는 55-70번 질문으로 구성되어 있다. 7…","fields":{"slug":"/blog/2020/70-JavaScript-Interview-Questions-4/"},"frontmatter":{"date":"08 February, 2020","title":"70 자바스크립트 인터뷰 질문 - 4부(번역)","description":"70 JavaScript Interview Questions","tags":["javascript","interview","translation"]},"tableOfContents":"<ul>\n<li><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></li>\n<li><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EB%A9%B0\">시작하며</a></li>\n<li><a href=\"#hi-guys-good-day-and-a-happy-new-year-\">Hi Guys Good Day and a Happy New Year 🎆🎆🎆!</a></li>\n<li><a href=\"#%EC%A7%88%EB%AC%B8-a-name0a\">질문 <a name=\"0\"></a></a></li>\n<li><a href=\"#55-%EC%95%94%EB%AC%B5%EC%A0%81smallimplicitsmall-%EA%B3%BC-%EB%AA%85%EC%8B%9C%EC%A0%81smallexplicitsmall-%EA%B0%95%EC%A0%9C%EB%B3%80%ED%99%98smallcoercionsmall%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name55a\">55. <strong>암묵적<small>(Implicit)</small></strong> 과 <strong>명시적<small>(Explicit)</small></strong> 강제변환<small>(Coercion)</small>의 차이점은 무엇인가? <a name=\"55\"></a></a></li>\n<li><a href=\"#56-nan%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-%EA%B0%92%EC%9D%B4-nan%EC%9D%B8%EC%A7%80-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name56a\">56. <code class=\"language-text\">NaN</code>이란 무엇인가? 값이 <code class=\"language-text\">NaN</code>인지 확인하는 방법은 무엇인가? <a name=\"56\"></a></a></li>\n<li><a href=\"#57-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B0%92%EC%9D%B4-array%EC%9D%B8%EC%A7%80-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94%EA%B0%80-a-name57a\">57. 어떻게 값이 <strong>Array</strong>인지 확인하는가? <a name=\"57\"></a></a></li>\n<li><a href=\"#58--%EB%98%90%EB%8A%94-%EB%AA%A8%EB%93%88%EB%A1%9C-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EA%B3%A0-number%EA%B0%80-%EC%A7%9D%EC%88%98%EC%9D%B8%EC%A7%80-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name58a\">58. <code class=\"language-text\">%</code> 또는 모듈로 연산자를 사용하지 않고 number가 짝수인지 확인하는 방법은 무엇인가? <a name=\"58\"></a></a></li>\n<li><a href=\"#59-%EA%B0%9D%EC%B2%B4%EC%97%90-%ED%8A%B9%EC%A0%95-%EC%86%8D%EC%84%B1%EC%9D%B4-%EC%9E%88%EB%8A%94%EC%A7%80%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%99%95%EC%95%88%ED%95%98%EB%8A%94%EA%B0%80-a-name59a\">59. 객체에 특정 속성이 있는지는 어떻게 확안하는가? <a name=\"59\"></a></a></li>\n<li><a href=\"#60-ajax-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name60a\">60. AJAX 란 무엇인가? <a name=\"60\"></a></a></li>\n<li><a href=\"#61-javascript%EB%A1%9C-%EA%B0%9D%EC%B2%B4%EB%A5%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name61a\">61. JavaScript로 객체를 만드는 방법은 무엇인가? <a name=\"61\"></a></a></li>\n<li><a href=\"#62-objectseal%EA%B3%BC-objectfreeze-%EB%A9%94%EC%84%9C%EB%93%9C%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name62a\">62. <code class=\"language-text\">Object.seal</code>과 <code class=\"language-text\">Object.freeze</code> 메서드의 차이점은 무엇인가? <a name=\"62\"></a></a></li>\n<li><a href=\"#63-%EA%B0%9D%EC%B2%B4%EC%97%90%EC%84%9C-in-%EC%97%B0%EC%82%B0%EC%9E%90%EC%99%80-hasownproperty-%EB%A9%94%EC%84%9C%EB%93%9C%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name63a\">63. 객체에서 <code class=\"language-text\">in</code> 연산자와 <code class=\"language-text\">hasOwnProperty</code> 메서드의 차이점은 무엇인가? <a name=\"63\"></a></a></li>\n<li><a href=\"#64-javasscript%EC%97%90%EC%84%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%B2%98%EB%A6%AC%ED%95%98%EB%8A%94%EA%B0%80-a-name64a\">64. JavasScript에서 어떻게 비동기 코드를 처리하는가? <a name=\"64\"></a></a></li>\n<li><a href=\"#65-%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9Dsmallfunction-expressionsmall%EA%B3%BC-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8smallfunction-declarationsmall%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name65a\">65. 함수 표현식<small>(function expression)</small>과 함수 선언<small>(function declaration)</small>의 차이점은 무엇인가? <a name=\"65\"></a></a></li>\n<li><a href=\"#66-%ED%95%A8%EC%88%98%EB%8A%94-%EB%AA%87-%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95%EC%9C%BC%EB%A1%9C-%ED%98%B8%EC%B6%9C-%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94%EA%B0%80-a-name66a\">66. 함수는 몇 가지 방법으로 호출 할 수 있는가? <a name=\"66\"></a></a></li>\n<li><a href=\"#67-memoization%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%9A%A9%EB%8F%84%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name67a\">67. Memoization란 무엇이며 용도는 무엇인가? <a name=\"67\"></a></a></li>\n<li><a href=\"#68-memoization-helper-%ED%95%A8%EC%88%98%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EC%8B%9C%EC%98%A4-a-name68a\">68. Memoization helper 함수를 구현하시오. <a name=\"68\"></a></a></li>\n<li><a href=\"#69-typeof-null%EC%9D%80-%EC%99%9C-%EA%B0%9D%EC%B2%B4%EB%A5%BC-%EB%A6%AC%ED%84%B4%ED%95%98%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B0%92%EC%9D%B4-null%EC%9D%B8%EC%A7%80-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94%EA%B0%80-a-name69a\">69. <code class=\"language-text\">typeof null</code>은 왜 객체를 리턴하며 어떻게 값이 <code class=\"language-text\">null</code>인지 확인하는가? <a name=\"69\"></a></a></li>\n<li><a href=\"#70-new-%ED%82%A4%EC%9B%8C%EB%93%9C%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%84-%ED%95%98%EB%8A%94%EA%B0%80-a-name70a\">70. <code class=\"language-text\">new</code> 키워드는 무엇을 하는가? <a name=\"70\"></a></a></li>\n<li><a href=\"#thanks-guys-for-reading-this-post\">Thanks guys for reading this post.</a></li>\n</ul>"}},{"node":{"excerpt":"출처 70 JavaScript Interview Questions 시작하며 글이 긴 관계로 4부로 나눠서 진행하며 1부는 1-17번 질문, 2부는 18-36번, 3부는 37-54번, 4부는 55-70번 질문으로 구성되어 있다. 7…","fields":{"slug":"/blog/2020/70-JavaScript-Interview-Questions-3/"},"frontmatter":{"date":"22 January, 2020","title":"70 자바스크립트 인터뷰 질문 - 3부(번역)","description":"70 JavaScript Interview Questions","tags":["javascript","interview","translation"]},"tableOfContents":"<ul>\n<li><a href=\"#%EC%B6%9C%EC%B2%98\">출처</a></li>\n<li><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EB%A9%B0\">시작하며</a></li>\n<li><a href=\"#hi-guys-good-day-and-a-happy-new-year-\">Hi Guys Good Day and a Happy New Year 🎆🎆🎆!</a></li>\n<li><a href=\"#%EC%A7%88%EB%AC%B8-a-name0a\">질문 <a name=\"0\"></a></a></li>\n<li><a href=\"#37-arguments-%EA%B0%9D%EC%B2%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name37a\">37. <strong>arguments</strong> 객체란 무엇인가? <a name=\"37\"></a></a></li>\n<li><a href=\"#38-prototype%EC%97%86%EC%9D%B4-%EA%B0%9D%EC%B2%B4%EB%A5%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name38a\">38. <strong>prototype</strong>없이 객체를 만드는 방법은 무엇인가? <a name=\"38\"></a></a></li>\n<li><a href=\"#39-%EC%9D%B4-%ED%95%A8%EC%88%98%EB%A5%BC-%ED%98%B8%EC%B6%9C%ED%95%A0-%EB%95%8C-b%EA%B0%80-%EA%B8%80%EB%A1%9C%EB%B2%8C-%EB%B3%80%EC%88%98%EB%A1%9C-%EB%90%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name39a\">39. 이 함수를 호출할 때 <code class=\"language-text\">b</code>가 글로벌 변수로 되는 이유는 무엇인가? <a name=\"39\"></a></a></li>\n<li><a href=\"#40-ecmascript%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name40a\">40. <strong>ECMAScript</strong>이란 무엇인가? <a name=\"40\"></a></a></li>\n<li><a href=\"#41-es6-%EB%98%90%EB%8A%94-ecmascript-2015%EC%9D%98-%EC%83%88%EB%A1%9C%EC%9A%B4-%EA%B8%B0%EB%8A%A5%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name41a\">41. <strong>ES6</strong> 또는 <strong>ECMAScript 2015</strong>의 새로운 기능은 무엇인가? <a name=\"41\"></a></a></li>\n<li><a href=\"#42-var-let-%EB%B0%8F-const-%ED%82%A4%EC%9B%8C%EB%93%9C%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name42a\">42. <code class=\"language-text\">var</code>, <code class=\"language-text\">let</code> 및 <code class=\"language-text\">const</code> 키워드의 차이점은 무엇인가? <a name=\"42\"></a></a></li>\n<li><a href=\"#43-arrow-functions-%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name43a\">43. <strong>Arrow functions</strong> 이란 무엇인가? <a name=\"43\"></a></a></li>\n<li><a href=\"#44-%ED%81%B4%EB%9E%98%EC%8A%A4smallclassessmall%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name44a\">44. 클래스<small>(Classes)</small>란 무엇인가? <a name=\"44\"></a></a></li>\n<li><a href=\"#45-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A6%AC%ED%84%B0%EB%9F%B4smalltemplate-literalssmall-%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name45a\">45. <strong>템플릿 리터럴<small>(Template Literals)</small></strong> 이란 무엇인가? <a name=\"45\"></a></a></li>\n<li><a href=\"#46-%EA%B0%9D%EC%B2%B4-%EA%B5%AC%EC%A1%B0-%EB%B6%84%ED%95%B4smallobject-destructuringsmall%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name46a\">46. 객체 구조 분해<small>(Object Destructuring)</small>란 무엇인가? <a name=\"46\"></a></a></li>\n<li><a href=\"#47-es6-modules%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name47a\">47. <code class=\"language-text\">ES6 Modules</code>이란 무엇인가? <a name=\"47\"></a></a></li>\n<li><a href=\"#48-set-%EA%B0%9D%EC%B2%B4%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%9E%91%EB%8F%99%ED%95%98%EB%8A%94%EA%B0%80-a-name48a\">48. <code class=\"language-text\">Set</code> 객체는 무엇이며 어떻게 작동하는가? <a name=\"48\"></a></a></li>\n<li><a href=\"#49-%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name49a\">49. 콜백 함수란 무엇인가? <a name=\"49\"></a></a></li>\n<li><a href=\"#50-%ED%94%84%EB%A1%9C%EB%AF%B8%EC%8A%A4smallpromisessmall-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name50a\">50. <strong>프로미스<small>(Promises)</small></strong> 란 무엇인가? <a name=\"50\"></a></a></li>\n<li><a href=\"#51-asyncawait%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%9E%91%EB%8F%99%ED%95%98%EB%8A%94%EA%B0%80-a-name51a\">51. <em>async/await</em>란 무엇이며 어떻게 작동하는가? <a name=\"51\"></a></a></li>\n<li><a href=\"#52-%EC%8A%A4%ED%94%84%EB%A0%88%EB%93%9C-%EC%97%B0%EC%82%B0%EC%9E%90smallspread-operatorsmall-%EC%99%80-%EB%82%98%EB%A8%B8%EC%A7%80-%EC%97%B0%EC%82%B0%EC%9E%90smallrest-operatorsmall-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name52a\">52. <strong>스프레드 연산자<small>(Spread operator)</small></strong> 와 <strong>나머지 연산자<small>(Rest operator)</small></strong> 의 차이점은 무엇인가? <a name=\"52\"></a></a></li>\n<li><a href=\"#53-%EA%B8%B0%EB%B3%B8-%EB%A7%A4%EA%B0%9C-%EB%B3%80%EC%88%98smalldefault-parameterssmall-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name53a\">53. <strong>기본 매개 변수<small>(Default Parameters)</small></strong> 란 무엇인가? <a name=\"53\"></a></a></li>\n<li><a href=\"#54-%EB%9E%98%ED%8D%BC-%EA%B0%9D%EC%B2%B4smallwrapper-objectssmall-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-a-name54a\">54. <strong>래퍼 객체<small>(Wrapper Objects)</small></strong> 란 무엇인가? <a name=\"54\"></a></a></li>\n</ul>"}}]}},"pageContext":{"limit":10,"skip":10,"numPages":3,"currentPage":2}},"staticQueryHashes":["253152893","3980716358"],"slicesMap":{}}