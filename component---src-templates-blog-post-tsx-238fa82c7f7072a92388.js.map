{"version":3,"sources":["webpack:///./src/components/Utterances/index.tsx","webpack:///./src/templates/BlogPost.tsx"],"names":["Utterances","ref","elem","scriptElem","document","createElement","src","async","crossOrigin","setAttribute","appendChild","StyledBlogPostTemplate","styled","div","pageQuery","BlogPostTemplate","props","data","location","pageContext","previous","next","post","markdownRemark","Layout","SEO","title","frontmatter","description","excerpt","className","tags","date","dangerouslySetInnerHTML","__html","html","to","fields","slug","rel"],"mappings":"2KAuBeA,EArBc,WAC3B,OACE,6BACEC,IAAK,SAAAC,GACH,GAAKA,EAAL,CAGA,IAAMC,EAAaC,SAASC,cAAc,UAC1CF,EAAWG,IAAM,gCACjBH,EAAWI,OAAQ,EACnBJ,EAAWK,YAAc,YACzBL,EAAWM,aAAa,OAAQ,0BAChCN,EAAWM,aAAa,aAAc,YACtCN,EAAWM,aAAa,QAAS,mBACjCN,EAAWM,aAAa,QAAS,gBACjCP,EAAKQ,YAAYP,QCjBzB,0CASA,IAAMQ,EAAyBC,IAAOC,IAAV,uFAAGD,CAAH,wMAsHfE,GAFEC,UA9D2B,SAAAC,GAAS,IAE/CC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,SAH+C,EAK7CF,EADFG,YAAeC,EAJgC,EAIhCA,SAAUC,EAJsB,EAItBA,KAErBC,EAAOL,EAAKM,eAClB,OACE,kBAACC,EAAA,EAAD,CAAQN,SAAUA,GAChB,kBAACO,EAAA,EAAD,CACEC,MAAOJ,EAAKK,YAAYD,MACxBE,YAAaN,EAAKK,YAAYC,aAAeN,EAAKO,UAEpD,kBAAClB,EAAD,KACE,iCACE,gCACE,wBAAImB,UAAU,+BACXR,EAAKK,YAAYD,OAEpB,wBAAII,UAAU,8BACXR,EAAKK,YAAYC,aAEpB,uBAAGE,UAAU,8BACVR,EAAKK,YAAYI,MAEpB,uBAAGD,UAAU,8BACVR,EAAKK,YAAYK,OAGtB,wBAAIF,UAAU,uBACd,6BACEA,UAAU,SACVG,wBAAyB,CAAEC,OAAQZ,EAAKa,SAG5C,wBAAIL,UAAU,wBACd,6BACE,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,aACZV,GACC,kBAAC,OAAD,CAAMgB,GAAIhB,EAASiB,OAAOC,KAAMC,IAAI,QAClC,uBAAGT,UAAU,uBACb,8BAAOV,EAASO,YAAYD,SAIlC,yBAAKI,UAAU,aACZT,GACC,kBAAC,OAAD,CAAMe,GAAIf,EAAKgB,OAAOC,KAAMC,IAAI,QAC9B,8BAAOlB,EAAKM,YAAYD,OACxB,uBAAGI,UAAU,4BAMvB,kBAAC,EAAD,SAQiB","file":"component---src-templates-blog-post-tsx-238fa82c7f7072a92388.js","sourcesContent":["import React from 'react';\n\nconst Utterances: React.FC = () => {\n  return (\n    <section\n      ref={elem => {\n        if (!elem) {\n          return;\n        }\n        const scriptElem = document.createElement('script');\n        scriptElem.src = 'https://utteranc.es/client.js';\n        scriptElem.async = true;\n        scriptElem.crossOrigin = 'anonymous';\n        scriptElem.setAttribute('repo', 'lannex/blog-utterances');\n        scriptElem.setAttribute('issue-term', 'pathname');\n        scriptElem.setAttribute('label', 'blog-utterances');\n        scriptElem.setAttribute('theme', 'github-light');\n        elem.appendChild(scriptElem);\n      }}\n    />\n  );\n};\n\nexport default Utterances;\n","import React from 'react';\nimport { graphql, Link, PageRendererProps } from 'gatsby';\nimport styled from 'styled-components';\n\n// components\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Utterances from '../components/Utterances';\n\nconst StyledBlogPostTemplate = styled.div`\n  & {\n    max-width: 680px;\n    margin: auto;\n\n    & h1.font-display-serif {\n      letter-spacing: -1px;\n    }\n\n    & nav {\n      & .nav__prev,\n      & .nav__next {\n        & a {\n          transition: 0.35s color;\n          color: #a0aec0;\n          font-size: 0.875rem;\n\n          &:hover {\n            color: #2d3748;\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface Props {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n    markdownRemark: {\n      excerpt: string;\n      frontmatter: {\n        date: string;\n        description: string;\n        tags: string;\n        title: string;\n      };\n      html: string;\n      id: string;\n    };\n  };\n  location: PageRendererProps['location'];\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean;\n    // next: null;\n    // previous: null;\n    slug: string;\n  };\n}\n\nconst BlogPostTemplate: React.FC<Props> = props => {\n  const {\n    data,\n    location,\n    pageContext: { previous, next },\n  } = props;\n  const post = data.markdownRemark;\n  return (\n    <Layout location={location}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <StyledBlogPostTemplate>\n        <article>\n          <header>\n            <h1 className=\"font-display-serif text-5xl\">\n              {post.frontmatter.title}\n            </h1>\n            <h2 className=\"mt-3 text-gray-700 text-lg\">\n              {post.frontmatter.description}\n            </h2>\n            <p className=\"mt-3 text-xs text-gray-500\">\n              {post.frontmatter.tags}\n            </p>\n            <p className=\"mt-1 text-xs text-gray-500\">\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <hr className=\"mt-3 border-dashed\" />\n          <section\n            className=\"remark\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n        </article>\n        <hr className=\"mt-16 border-dashed\" />\n        <nav>\n          <div className=\"flex flex-wrap justify-between py-12\">\n            <div className=\"nav__prev\">\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  <i className=\"bx bx-chevron-left\" />\n                  <span>{previous.frontmatter.title}</span>\n                </Link>\n              )}\n            </div>\n            <div className=\"nav__next\">\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  <span>{next.frontmatter.title}</span>\n                  <i className=\"bx bx-chevron-right\" />\n                </Link>\n              )}\n            </div>\n          </div>\n        </nav>\n        <Utterances />\n      </StyledBlogPostTemplate>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}